[{"model": "wagtailcore.site", "pk": 2, "fields": {"hostname": "localhost", "port": 80, "site_name": null, "root_page": 3, "is_default_site": true}}, {"model": "wagtailcore.page", "pk": 1, "fields": {"path": "0001", "depth": 1, "numchild": 1, "title": "Root", "draft_title": "Root", "slug": "root", "content_type": 1, "live": true, "has_unpublished_changes": false, "url_path": "/", "owner": null, "seo_title": "", "show_in_menus": false, "search_description": "", "go_live_at": null, "expire_at": null, "expired": false, "locked": false, "first_published_at": null, "last_published_at": null, "latest_revision_created_at": null, "live_revision": null}}, {"model": "wagtailcore.page", "pk": 3, "fields": {"path": "00010001", "depth": 2, "numchild": 4, "title": "Inicio", "draft_title": "Inicio", "slug": "home", "content_type": 3, "live": true, "has_unpublished_changes": false, "url_path": "/home/", "owner": null, "seo_title": "", "show_in_menus": false, "search_description": "", "go_live_at": null, "expire_at": null, "expired": false, "locked": false, "first_published_at": "2018-04-17T05:55:21.059Z", "last_published_at": "2018-04-17T05:56:24.690Z", "latest_revision_created_at": "2018-04-17T05:56:24.628Z", "live_revision": 17}}, {"model": "wagtailcore.page", "pk": 4, "fields": {"path": "000100010001", "depth": 3, "numchild": 2, "title": "PythonPy Blog", "draft_title": "PythonPy Blog", "slug": "blog", "content_type": 7, "live": true, "has_unpublished_changes": false, "url_path": "/home/blog/", "owner": 1, "seo_title": "", "show_in_menus": true, "search_description": "", "go_live_at": null, "expire_at": null, "expired": false, "locked": false, "first_published_at": "2018-04-17T05:30:57.862Z", "last_published_at": "2018-04-17T05:50:51.518Z", "latest_revision_created_at": "2018-04-17T05:50:51.457Z", "live_revision": 13}}, {"model": "wagtailcore.page", "pk": 5, "fields": {"path": "0001000100010001", "depth": 4, "numchild": 0, "title": "Post 1 blbablabla", "draft_title": "Post 1 blbablabla", "slug": "post-1-tutorial-bla-bkla", "content_type": 8, "live": true, "has_unpublished_changes": false, "url_path": "/home/blog/post-1-tutorial-bla-bkla/", "owner": 1, "seo_title": "", "show_in_menus": false, "search_description": "", "go_live_at": null, "expire_at": null, "expired": false, "locked": false, "first_published_at": "2018-04-17T05:34:49.733Z", "last_published_at": "2018-04-17T05:43:08.863Z", "latest_revision_created_at": "2018-04-17T05:43:08.792Z", "live_revision": 10}}, {"model": "wagtailcore.page", "pk": 6, "fields": {"path": "000100010003", "depth": 3, "numchild": 0, "title": "Acerca de", "draft_title": "Acerca de", "slug": "acerca-de", "content_type": 6, "live": true, "has_unpublished_changes": false, "url_path": "/home/acerca-de/", "owner": 1, "seo_title": "", "show_in_menus": true, "search_description": "", "go_live_at": null, "expire_at": null, "expired": false, "locked": false, "first_published_at": "2018-04-17T05:36:50.430Z", "last_published_at": "2018-04-17T05:36:50.430Z", "latest_revision_created_at": "2018-04-17T05:36:50.375Z", "live_revision": 6}}, {"model": "wagtailcore.page", "pk": 7, "fields": {"path": "000100010002", "depth": 3, "numchild": 0, "title": "FAQ", "draft_title": "FAQ", "slug": "faq", "content_type": 6, "live": true, "has_unpublished_changes": false, "url_path": "/home/faq/", "owner": 1, "seo_title": "", "show_in_menus": true, "search_description": "", "go_live_at": null, "expire_at": null, "expired": false, "locked": false, "first_published_at": "2018-04-17T05:39:01.035Z", "last_published_at": "2018-04-17T05:39:01.035Z", "latest_revision_created_at": "2018-04-17T05:39:00.997Z", "live_revision": 7}}, {"model": "wagtailcore.page", "pk": 8, "fields": {"path": "000100010004", "depth": 3, "numchild": 2, "title": "Tutoriales", "draft_title": "Tutoriales", "slug": "tutoriales", "content_type": 7, "live": true, "has_unpublished_changes": false, "url_path": "/home/tutoriales/", "owner": 1, "seo_title": "", "show_in_menus": true, "search_description": "", "go_live_at": null, "expire_at": null, "expired": false, "locked": false, "first_published_at": "2018-04-17T05:40:50.387Z", "last_published_at": "2018-04-17T05:40:50.387Z", "latest_revision_created_at": "2018-04-17T05:40:50.347Z", "live_revision": 8}}, {"model": "wagtailcore.page", "pk": 9, "fields": {"path": "0001000100040001", "depth": 4, "numchild": 0, "title": "Tutorial de Flask", "draft_title": "Tutorial de Flask", "slug": "tutorial-de-flask", "content_type": 8, "live": true, "has_unpublished_changes": false, "url_path": "/home/tutoriales/tutorial-de-flask/", "owner": 1, "seo_title": "", "show_in_menus": false, "search_description": "", "go_live_at": null, "expire_at": null, "expired": false, "locked": false, "first_published_at": "2018-04-17T05:42:29.067Z", "last_published_at": "2018-04-17T05:42:29.067Z", "latest_revision_created_at": "2018-04-17T05:42:28.990Z", "live_revision": 9}}, {"model": "wagtailcore.page", "pk": 10, "fields": {"path": "0001000100010002", "depth": 4, "numchild": 0, "title": "Lanzamiento de la Web de Python Py", "draft_title": "Lanzamiento de la Web de Python Py", "slug": "lanzamiento-de-la-web-de-python-py", "content_type": 8, "live": true, "has_unpublished_changes": false, "url_path": "/home/blog/lanzamiento-de-la-web-de-python-py/", "owner": 1, "seo_title": "", "show_in_menus": false, "search_description": "", "go_live_at": null, "expire_at": null, "expired": false, "locked": false, "first_published_at": "2018-04-17T05:44:33.366Z", "last_published_at": "2018-04-17T05:45:31.156Z", "latest_revision_created_at": "2018-04-17T05:45:31.092Z", "live_revision": 12}}, {"model": "wagtailcore.page", "pk": 11, "fields": {"path": "0001000100040002", "depth": 4, "numchild": 0, "title": "Tutorial de Django", "draft_title": "Tutorial de Django", "slug": "tutorial-de-django", "content_type": 8, "live": true, "has_unpublished_changes": false, "url_path": "/home/tutoriales/tutorial-de-django/", "owner": 1, "seo_title": "", "show_in_menus": false, "search_description": "", "go_live_at": null, "expire_at": null, "expired": false, "locked": false, "first_published_at": "2018-04-17T05:54:01.997Z", "last_published_at": "2018-04-17T05:54:01.997Z", "latest_revision_created_at": "2018-04-17T05:54:01.943Z", "live_revision": 14}}, {"model": "wagtailcore.pagerevision", "pk": 1, "fields": {"page": 4, "submitted_for_moderation": false, "created_at": "2018-04-17T05:30:57.813Z", "user": 1, "content_json": "{\"pk\": 4, \"path\": \"000100010001\", \"depth\": 3, \"numchild\": 0, \"title\": \"PythonPy Blog\", \"draft_title\": \"PythonPy Blog\", \"slug\": \"pythonpy-blog\", \"content_type\": 7, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/pythonpy-blog/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": null, \"live_revision\": null, \"intro\": \"<p>Este es el blog</p>\"}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 2, "fields": {"page": 5, "submitted_for_moderation": false, "created_at": "2018-04-17T05:34:44.166Z", "user": 1, "content_json": "{\"pk\": 5, \"path\": \"0001000100010001\", \"depth\": 4, \"numchild\": 0, \"title\": \"Post 1 tutorial bla bkla\", \"draft_title\": \"Post 1 tutorial bla bkla\", \"slug\": \"post-1-tutorial-bla-bkla\", \"content_type\": 8, \"live\": false, \"has_unpublished_changes\": false, \"url_path\": \"/home/pythonpy-blog/post-1-tutorial-bla-bkla/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": null, \"live_revision\": null, \"date\": \"2018-04-17\", \"excerpt\": \"resumen del post\", \"body\": \"[{\\\"type\\\": \\\"heading\\\", \\\"value\\\": \\\"Encabezado bla\\\", \\\"id\\\": \\\"717ac0cd-658b-4728-b589-725d80c1bcfd\\\"}, {\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Este<b> es un</b> <i>parrafo</i></p>\\\", \\\"id\\\": \\\"b5d19b48-7453-45d2-a9e8-025a02fee6e2\\\"}, {\\\"type\\\": \\\"image\\\", \\\"value\\\": 1, \\\"id\\\": \\\"ad4d39aa-dd4b-4fb0-800d-3810b8bff193\\\"}, {\\\"type\\\": \\\"two_columns\\\", \\\"value\\\": {\\\"left_column\\\": [{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Columna 1</p><p>Do you see any Teletubbies in here? Do you see a slender plastic tag clipped to my shirt with my name printed on it? Do you see a little Asian child with a blank expression on his face sitting outside on a mechanical helicopter that shakes when you put quarters in it? No? Well, that&#x27;s what you see at a toy store. And you must think you&#x27;re in a toy store, because you&#x27;re here shopping for an infant named Jeb.</p>\\\", \\\"id\\\": \\\"5b8ddbd1-8966-4e4c-86d7-6ddcb8939008\\\"}], \\\"right_column\\\": [{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Columna2</p><p>Now that there is the Tec-9, a crappy spray gun from South Miami. This gun is advertised as the most popular gun in American crime. Do you believe that shit? It actually says that in the little book that comes with it: the most popular gun in American crime. Like they&#x27;re actually proud of that shit.</p><p></p>\\\", \\\"id\\\": \\\"91180dce-b8e9-4d34-9bb6-ff5d482fb859\\\"}]}, \\\"id\\\": \\\"7d370740-2aee-4044-a68d-09212f071107\\\"}, {\\\"type\\\": \\\"thumbnail\\\", \\\"value\\\": {\\\"image\\\": 2, \\\"url\\\": \\\"http://google.com\\\", \\\"media_type\\\": \\\"image\\\", \\\"text\\\": \\\"no se\\\"}, \\\"id\\\": \\\"c64141f0-5cee-424d-8060-d081eb644a57\\\"}]\", \"tagged_items\": [], \"gallery_images\": []}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 3, "fields": {"page": 5, "submitted_for_moderation": false, "created_at": "2018-04-17T05:34:49.676Z", "user": 1, "content_json": "{\"pk\": 5, \"path\": \"0001000100010001\", \"depth\": 4, \"numchild\": 0, \"title\": \"Post 1 tutorial bla bkla\", \"draft_title\": \"Post 1 tutorial bla bkla\", \"slug\": \"post-1-tutorial-bla-bkla\", \"content_type\": 8, \"live\": false, \"has_unpublished_changes\": true, \"url_path\": \"/home/pythonpy-blog/post-1-tutorial-bla-bkla/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": \"2018-04-17T05:34:44.166Z\", \"live_revision\": null, \"date\": \"2018-04-17\", \"excerpt\": \"resumen del post\", \"body\": \"[{\\\"type\\\": \\\"heading\\\", \\\"value\\\": \\\"Encabezado bla\\\", \\\"id\\\": \\\"717ac0cd-658b-4728-b589-725d80c1bcfd\\\"}, {\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Este<b> es un</b> <i>parrafo</i></p>\\\", \\\"id\\\": \\\"b5d19b48-7453-45d2-a9e8-025a02fee6e2\\\"}, {\\\"type\\\": \\\"image\\\", \\\"value\\\": 1, \\\"id\\\": \\\"ad4d39aa-dd4b-4fb0-800d-3810b8bff193\\\"}, {\\\"type\\\": \\\"two_columns\\\", \\\"value\\\": {\\\"left_column\\\": [{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Columna 1</p><p>Do you see any Teletubbies in here? Do you see a slender plastic tag clipped to my shirt with my name printed on it? Do you see a little Asian child with a blank expression on his face sitting outside on a mechanical helicopter that shakes when you put quarters in it? No? Well, that&#x27;s what you see at a toy store. And you must think you&#x27;re in a toy store, because you&#x27;re here shopping for an infant named Jeb.</p>\\\", \\\"id\\\": \\\"5b8ddbd1-8966-4e4c-86d7-6ddcb8939008\\\"}], \\\"right_column\\\": [{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Columna2</p><p>Now that there is the Tec-9, a crappy spray gun from South Miami. This gun is advertised as the most popular gun in American crime. Do you believe that shit? It actually says that in the little book that comes with it: the most popular gun in American crime. Like they&#x27;re actually proud of that shit.</p><p></p>\\\", \\\"id\\\": \\\"91180dce-b8e9-4d34-9bb6-ff5d482fb859\\\"}]}, \\\"id\\\": \\\"7d370740-2aee-4044-a68d-09212f071107\\\"}, {\\\"type\\\": \\\"thumbnail\\\", \\\"value\\\": {\\\"image\\\": 2, \\\"url\\\": \\\"http://google.com\\\", \\\"media_type\\\": \\\"image\\\", \\\"text\\\": \\\"no se\\\"}, \\\"id\\\": \\\"c64141f0-5cee-424d-8060-d081eb644a57\\\"}]\", \"tagged_items\": [], \"gallery_images\": []}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 4, "fields": {"page": 4, "submitted_for_moderation": false, "created_at": "2018-04-17T05:35:13.816Z", "user": 1, "content_json": "{\"pk\": 4, \"path\": \"000100010001\", \"depth\": 3, \"numchild\": 1, \"title\": \"PythonPy Blog\", \"draft_title\": \"PythonPy Blog\", \"slug\": \"pythonpy-blog\", \"content_type\": 7, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/pythonpy-blog/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": true, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": \"2018-04-17T05:30:57.862Z\", \"last_published_at\": \"2018-04-17T05:30:57.862Z\", \"latest_revision_created_at\": \"2018-04-17T05:30:57.813Z\", \"live_revision\": 1, \"intro\": \"<p>Este es el blog</p>\"}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 5, "fields": {"page": 6, "submitted_for_moderation": false, "created_at": "2018-04-17T05:36:42.133Z", "user": 1, "content_json": "{\"pk\": 6, \"path\": \"000100010002\", \"depth\": 3, \"numchild\": 0, \"title\": \"Acerca de\", \"draft_title\": \"Acerca de\", \"slug\": \"acerca-de\", \"content_type\": 6, \"live\": false, \"has_unpublished_changes\": false, \"url_path\": \"/home/acerca-de/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": null, \"live_revision\": null, \"body\": \"[{\\\"type\\\": \\\"heading\\\", \\\"value\\\": \\\"Quienes somos?\\\", \\\"id\\\": \\\"f2de690c-5992-4593-8a03-85855e226abc\\\"}, {\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Que buena pregunta</p>\\\", \\\"id\\\": \\\"ea2964c3-cb57-413a-8fcf-8ca6f5a1520b\\\"}]\"}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 6, "fields": {"page": 6, "submitted_for_moderation": false, "created_at": "2018-04-17T05:36:50.375Z", "user": 1, "content_json": "{\"pk\": 6, \"path\": \"000100010002\", \"depth\": 3, \"numchild\": 0, \"title\": \"Acerca de\", \"draft_title\": \"Acerca de\", \"slug\": \"acerca-de\", \"content_type\": 6, \"live\": false, \"has_unpublished_changes\": true, \"url_path\": \"/home/acerca-de/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": true, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": \"2018-04-17T05:36:42.133Z\", \"live_revision\": null, \"body\": \"[{\\\"type\\\": \\\"heading\\\", \\\"value\\\": \\\"Quienes somos?\\\", \\\"id\\\": \\\"f2de690c-5992-4593-8a03-85855e226abc\\\"}, {\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Que buena pregunta</p>\\\", \\\"id\\\": \\\"ea2964c3-cb57-413a-8fcf-8ca6f5a1520b\\\"}]\"}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 7, "fields": {"page": 7, "submitted_for_moderation": false, "created_at": "2018-04-17T05:39:00.997Z", "user": 1, "content_json": "{\"pk\": 7, \"path\": \"000100010003\", \"depth\": 3, \"numchild\": 0, \"title\": \"FAQ\", \"draft_title\": \"FAQ\", \"slug\": \"faq\", \"content_type\": 6, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/faq/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": true, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": null, \"live_revision\": null, \"body\": \"[{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<h4>Pregunta 1?</h4><p>You think water moves fast? You should see ice. It moves like it has a mind. Like it knows it killed the world once and got a taste for murder. After the avalanche, it took us a week to climb out. Now, I don&#x27;t know exactly when we turned on each other, but I know that seven of us survived the slide... and only five made it out. Now we took an oath, that I&#x27;m breaking now. We said we&#x27;d say it was the snow that killed the other two, but it wasn&#x27;t. Nature is lethal but it doesn&#x27;t hold a candle to man.</p><p></p><h4>Pregunta 2?</h4><p>The lysine contingency - it&#x27;s intended to prevent the spread of the animals is case they ever got off the island. Dr. Wu inserted a gene that makes a single faulty enzyme in protein metabolism. The animals can&#x27;t manufacture the amino acid lysine. Unless they&#x27;re continually supplied with lysine by us, they&#x27;ll slip into a coma and die.</p><p></p><h4>Pregunta 3?</h4><p>sijsgflsgfjlsfgnsfg</p><p>sgsgdsgdsgds</p><p>sdgd</p><p>s</p><p></p><p></p><h4>Pregunta 4?</h4><p></p><p>NOPE</p>\\\", \\\"id\\\": \\\"8379b1b4-7f75-4586-a086-ee5e95eb2ecb\\\"}]\"}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 8, "fields": {"page": 8, "submitted_for_moderation": false, "created_at": "2018-04-17T05:40:50.347Z", "user": 1, "content_json": "{\"pk\": 8, \"path\": \"000100010004\", \"depth\": 3, \"numchild\": 0, \"title\": \"Tutoriales\", \"draft_title\": \"Tutoriales\", \"slug\": \"tutoriales\", \"content_type\": 7, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/tutoriales/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": true, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": null, \"live_revision\": null, \"intro\": \"<p></p>\"}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 9, "fields": {"page": 9, "submitted_for_moderation": false, "created_at": "2018-04-17T05:42:28.990Z", "user": 1, "content_json": "{\"pk\": 9, \"path\": \"0001000100040001\", \"depth\": 4, \"numchild\": 0, \"title\": \"Tutorial de Flask\", \"draft_title\": \"Tutorial de Flask\", \"slug\": \"tutorial-de-flask\", \"content_type\": 8, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/tutoriales/tutorial-de-flask/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": null, \"live_revision\": null, \"date\": \"2018-04-17\", \"excerpt\": \"\", \"body\": \"[{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Bienvenido!, est\\\\u00e1s a punto de empezar tu viaje en el aprendizaje de creaci\\\\u00f3n de aplicaciones web con <a href=\\\\\\\"https://python.org/\\\\\\\">Python</a> y el framework <a href=\\\\\\\"http://flask.pocoo.org/\\\\\\\">Flask</a>. En el primer cap\\\\u00edtulo, aprender\\\\u00e1s como configurar un proyecto Flask. Para el final de este cap\\\\u00edtulo tendr\\\\u00e1s una aplicaci\\\\u00f3n web Flask simple corriendo en tu computador!</p><p>Para tu referencia, abajo est\\\\u00e1 una lista con los art\\\\u00edculos en esta serie.</p><ul><li><a href=\\\\\\\"https://lomelisan.wordpress.com/2015/05/29/mega-tutorial-de-flask-python-1era-parte-hola-mundo/\\\\\\\">Parte 1: Hola Mundo! </a>(este art\\\\u00edculo)</li><li><a href=\\\\\\\"https://lomelisan.wordpress.com/2015/05/31/el-mega-tutorial-de-flask-parte-ii-plantillas/\\\\\\\">Parte 2: Plantillas</a></li><li><a href=\\\\\\\"https://lomelisan.wordpress.com/2015/06/01/el-mega-tutorial-de-flask-parte-iii-formularios-web/\\\\\\\">Parte 3: Formularios Web</a></li><li><a href=\\\\\\\"https://lomelisan.wordpress.com/2015/06/02/el-mega-tutorial-de-flask-parte-iv-base-de-datos/\\\\\\\">Parte 4: Base de datos [en traducci\\\\u00f3n]</a></li><li>Parte 5: Acceso de Usuario [a\\\\u00fan no traducido]</li><li>Parte 6: P\\\\u00e1ginas de perfil y Avatares [a\\\\u00fan no traducido]</li><li>Parte 7: Manejo de errores [a\\\\u00fan no traducido]</li><li>Parte 8: Seguidores [disponible el 23/01/18]</li><li>Parte 9: Paginaci\\\\u00f3n [disponible el 30/01/18]</li><li>Parte 10: Soporte de Email [disponible el 06/02/18]</li><li>Parte 11: Lavado de Cara [disponible el 13/02/18]</li><li>Parte 12: Fechas y Tiempos [disponible el 20/02/18]</li><li>Parte 13: I18n y L10n [disponible el 27/02/18]</li><li>Parte 14: Ajax [disponible el 06/03/18]</li><li>Parte 15: Una mejor estructura de aplicaci\\\\u00f3n [disponible el 13/03/18]</li><li>Parte 16: Full-Text Search [disponible el 20/03/18]</li><li>Parte 17: Despliegue en GNU/Linux [disponible el 27/03/18]</li><li>Parte 18: Despliegue en Heroku [disponible el 03/04/18]</li><li>Parte 19: Depliegue en contenedores Dockers [disponible el 10/04/18]</li><li>Parte 20: Un poco de magia JavaScript [disponible el 17/04/18]</li><li>Parte 21: Notificaciones de Usuario [disponible el 24/04/18]</li><li>Parte 22: Trabajos de fondo [disponible el 01/05/18]</li><li>Parte 23: Interfaces programadas de aplicaci\\\\u00f3n (APIs) [disponible el 08/05/18]</li></ul><p><i>Nota 1: Si est\\\\u00e1s buscando la versi\\\\u00f3n anterior de este tutorial, est\\\\u00e1</i> <a href=\\\\\\\"https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world-legacy\\\\\\\"><i>aqu\\\\u00ed</i></a><i>.</i></p><p><i>Nota 2: Si te gustar\\\\u00eda apoyar mi trabajo en mi</i> <a href=\\\\\\\"https://blog.miguelgrinberg.com/\\\\\\\"><i>blog</i></a><i>, o simplemente no tienes paciencia para esperar por los art\\\\u00edculos semanales, estoy ofreciendo la versi\\\\u00f3n completa de este tutorial empaquetado en forma de libro online o v\\\\u00eddeos. Para mas informaci\\\\u00f3n, visita</i> <a href=\\\\\\\"https://learn.miguelgrinberg.com/\\\\\\\"><i>learn.miguelgrinberg.com</i></a><i>.</i><br/></p><p>Todo los ejemplos de c\\\\u00f3digo presentados en este tutorial est\\\\u00e1n hospedados en un repositorio GitHub. Descargar el c\\\\u00f3digo desde GitHub puede ahorrarte bastante escritura, pero personalmente recomiendo encarecidamente que escribas el c\\\\u00f3digo tu mismo, por lo menos en los primeros cap\\\\u00edtulos. Una vez que te familiarices con Flask y la aplicaci\\\\u00f3n de ejemplo puedes acceder al c\\\\u00f3digo directamente desde GitHub si la escritura de c\\\\u00f3digo se vuelve muy tediosa.</p><p>En el principio de cada cap\\\\u00edtulo, voy a darte tres enlaces GitHub que pueden ser \\\\u00fatiles mientras trabajas a trav\\\\u00e9s del cap\\\\u00edtulo. El enlace <b>Browse</b> abrir\\\\u00e1 el repositorio GitHub para Microblog en el lugar donde los cambios\\\\u00a0 para el cap\\\\u00edtulo que est\\\\u00e1s leyendo fueron a\\\\u00f1adidos, sin incluir ning\\\\u00fan cambio introducido en los cap\\\\u00edtulos futuros. El enlace <b>Zip</b> es un enlace de descarga para un archivo zip incluyendo la aplicaci\\\\u00f3n entera para el momento y con los cambios del cap\\\\u00edtulo actual. El enlace <b>Diff</b> abrir\\\\u00e1 una vista gr\\\\u00e1fica con todos los cambios que fueron realizados en el cap\\\\u00edtulo que est\\\\u00e1s por leer.</p><p><i>Los enlaces GitHub para este cap\\\\u00edtulo son:</i> <a href=\\\\\\\"https://github.com/miguelgrinberg/microblog/tree/v0.1\\\\\\\"><i>Browse</i></a><i>,</i> <a href=\\\\\\\"https://github.com/miguelgrinberg/microblog/archive/v0.1.zip\\\\\\\"><i>Zip</i></a><i>,</i> <a href=\\\\\\\"https://github.com/miguelgrinberg/microblog/compare/v0.0...v0.1\\\\\\\"><i>Diff</i></a><i>.</i></p><h2>Instalando Python</h2><p>Si no tienes Python instalado en tu computador, ve e inst\\\\u00e1lalo ahora. Si tu sistema operativo no te provee un paquete Python, puedes descargar un instalador desde el <a href=\\\\\\\"http://python.org/download/\\\\\\\">sitio oficial de Python</a>. Si est\\\\u00e1s usando Microsoft Windows junto con WSL o Cygwin, recuerda que no estar\\\\u00e1s usando la versi\\\\u00f3n nativa de Python, sino una versi\\\\u00f3n amigable a Unix que necesitas obtener desde Ubuntu (si est\\\\u00e1s usando WSL) o desde Cygwin.</p><p>Para asegurarte que tu instalaci\\\\u00f3n de Python es funcional, puedes abrir una ventana del terminal y escribir python3, o si eso no resulta, solo python. Esto es lo que deber\\\\u00eda aparecer:</p><p>$ python3<br/>Python 3.5.2 (default, Nov 17 2016, 17:05:23)<br/>[GCC 5.4.0 20160609] on linux<br/>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.<br/>&gt;&gt;&gt; _</p><p>El int\\\\u00e9rprete Python est\\\\u00e1 esperando ahora en una prompt interactiva, donde puedes introducir sentencias Python. En cap\\\\u00edtulos futuros aprender\\\\u00e1s para que clase de cosas esta prompt interactiva es \\\\u00fatil. Pero por ahora, haz confirmado que tienes Python instalado en tu sistema. Para salir de la prompt interactiva, puedes escribir exit() y presiona Enter. En las versiones Linux y Mac OS X de Python tambien puedes presionar Ctrl-D para salir del int\\\\u00e9rprete. En Windows, el atajo de salida es Ctrl-Z seguido de Enter.</p><h2>Instalando Flask</h2><p>El siguiente paso es instalar Flask, pero antes de adentrarme en ello quiero contarte sobre las mejores pr\\\\u00e1cticas asociadas con la instalaci\\\\u00f3n de <i>paquetes</i> Python.</p><p>En Python, paquetes como Flask est\\\\u00e1n dispobibles en un repositorio p\\\\u00fablico, desde donde cualquiera puede descargarlos e instalarlos. El repositorio oficial del paquete Python es llamado <a href=\\\\\\\"https://pypi.python.org/pypi\\\\\\\">PyPI</a>, por sus siglas en ingl\\\\u00e9s \\\\u201cPython Package Index\\\\u201d (alguna gente tambi\\\\u00e9n se refiere a este repositorio como la \\\\u201ccheese shop\\\\u201d). Instalar un paquete desde PyPI es bastante simple, debido a que Python viene con una herramienta llamada pip que hace este trabajo (en Python 2.7 pipno viene incluido con Python y necesita ser instalado por separado).</p><p>Para instalar un paquete en tu m\\\\u00e1qina, usa el comando pip como sigue:</p><p>$ pip install &lt;package-name&gt;</p><p>Curiosamente, este m\\\\u00e9todo de instalaci\\\\u00f3n de paquetes no funcionar\\\\u00e1 para la mayor\\\\u00eda de los casos.\\\\u00a0 Si tu int\\\\u00e9rprete Python fue instalado globalmente para todos los usuarios de tu computadora, es probable que tu cuenta de usuario regular no tenga permisos para hacer modificaciones, por lo que la \\\\u00fanica manera de ejecutar el comando de arriba es desde una cuenta administrador. Pero incluso sin esa complicaci\\\\u00f3n, considera que ocurre cuando se instala un paquete de la anterior manera. La herramienta pip va a descargar el paquete desde PyPI, y luego lo a\\\\u00f1adir\\\\u00e1 a tu instalaci\\\\u00f3n de Python.\\\\u00a0 Desde ese momento. cada script Python que tengas en tu sistema tendr\\\\u00e1 acceso a ese paquete. Imagina una situaci\\\\u00f3n en la que hayas terminado una aplicaci\\\\u00f3n web usando la versi\\\\u00f3n 0.11 de Flask, la cual fue la versi\\\\u00f3n mas actual de Flask cuando empezaste, pero ahora ha sido sucedido por la versi\\\\u00f3n 0.12. Ahora quieres empezar una segunda aplicaci\\\\u00f3n, por lo que te gustar\\\\u00eda usar la versi\\\\u00f3n 0.12, pero si remplazar las versi\\\\u00f3n 0.11 que has instalado corres el riegos de romper tu aplicaci\\\\u00f3n antigua. Vez lo que ocurre? Ser\\\\u00eda ideal si fuese posible instalar Flask 0.11 para ser usado por tu antigua aplicaci\\\\u00f3n y tambi\\\\u00e9n instalar Flask 0.12 para tu nueva aplicaci\\\\u00f3n.</p><p>Para resolver este problema de mantener diferentes versiones de paquetes para diferentes aplicaciones, Python usa el concepto de <i>ambientes virtuales</i>. Un ambiente virtual es una copia completa del interpete Python. Cuando instalas paquetes en un ambiente virtual, el sistema en si del interprete Python no es afectado, solo se afecta la copia. Por lo tanto, la soluci\\\\u00f3n para tener total libertad de instalar cualquiera de las versiones de tus paquetes para cada aplicaci\\\\u00f3n es usar un ambiente virtual distinto para cada aplicaci\\\\u00f3n. Los ambientes virtuales tiene el beneficio extra de que son pose\\\\u00eddo por el usuario que los crea, por lo que no necesitan una cuenta administrador.</p><p>Comencemos creando un directorio donde el proyecto tendr\\\\u00e1 vida. Llamar\\\\u00e9 a este directorio <i>microblog</i>, ya que ese es el nombre de la aplicaci\\\\u00f3n:</p><p>$ mkdir microblog<br/>$ cd microblog</p><p>Si est\\\\u00e1s usando la Python versi\\\\u00f3n 3, ya cuentas con los ambientes virtuales integrados, por lo que solo necesitas esto para crear uno:</p><p>$ python3 -m venv venv</p><p>Con este comando, estoy pidiendo a Python correr el paquete venv, el cual crea un ambiente virtual llamado venv. El primer venv en la sentencia es el nombre del paquete de ambiente virtuales de Python y el segundo es el nombre del ambiente virtual que voy a usar para este proyecto. Si te resulta confuso, puedes reemplazar el segundo venv con un nombre diferente que tu quieras asignar a tu ambiente virtual. En general yo creo mis ambientes virtuales con el nombre venv en el directorio del proyecto, para que cuando haga cd dentro del proyecto encuentre su respectivo ambiente virtual.</p><p>Recuerda que en algunos sistemas operativos puede que necesites usar python en vez de python3 en la sentencia anterior. Algunas instalaciones usan python para versiones Python 2.x y python3 para las versiones 3.x, mientras que otras usan python para las versiones 3.x.</p><p>Despu\\\\u00e9s de que el comando se ejecute, vas a tener un directorio llamado <i>venv</i> donde tus archivos del ambiente virtual estar\\\\u00e1n almacenados.</p><p>Si est\\\\u00e1s usando cualquier versi\\\\u00f3n anterior a la 3.4\\\\u00a0 (y eso incluye la versi\\\\u00f3n 2.7), los ambientes virtual no est\\\\u00e1n soportados de manera nativa. Para aquellas versiones de Python, necesitas descargar e instalar una herramienta de terceros llamada <a href=\\\\\\\"https://virtualenv.pypa.io/\\\\\\\">virtualenv</a> antes de que puedas crear ambiente virtuales. Una vez que virtualenv est\\\\u00e9 instalado, podr\\\\u00e1s crear ambientes virtuales con el siguiente comando:</p><p>$ virtualenv venv</p><p>Sin importar el m\\\\u00e9todo que hayas usado para crearlo, ya deber\\\\u00edas tener tu ambiente virtual disponible. Ahora tienes que indicarle al sistema que quieres usarlo, y eso lo haces <i>activ\\\\u00e1ndolo</i>. Usa el siguiente comando para activar tu nuevo ambiente virtual:</p><p>$ source venv/bin/activate<br/>(venv) $ _</p><p>Si est\\\\u00e1s usando la command prompt de Microsoft Windows, el comando de activaci\\\\u00f3n es ligeramente distinto:</p><p>$ venv\\\\\\\\Scripts\\\\\\\\activate<br/>(venv) $ _</p><p>Cuando activas un ambiente virtual, la configuraci\\\\u00f3n de tu sesi\\\\u00f3n de terminal es modificada para que el interprete Python almacenado dentro sea el invocado cuando escribas python. Adem\\\\u00e1s, el promt del terminal es modificado para incluir el nombre del ambiente virtual activado. Los cambios realizados a tu sesi\\\\u00f3n de terminal son todos temporales y privados a esa sesi\\\\u00f3n, por lo que no se mantendr\\\\u00e1n cuando cierres la sesi\\\\u00f3n de terminal. Si trabajas con m\\\\u00faltiples ventanas de terminal abiertas al mismo tiempo, es completamente posible tener diferentes ambientes virtuales activados en cada una de ellas. Adem\\\\u00e1s, el prompt del terminal es modificado para incluir el nombre del ambiente virtual activado.</p><p>Ahora que tienes un ambiente virtual creado y activado, puedes finalmente instalar Flask en \\\\u00e9l:</p><p>(venv) $ pip install flask</p><p>Si quieres confirmar que tu ambiente virtual tiene instalado Flask, puedes iniciar el int\\\\u00e9rprete Python e importar Flask en \\\\u00e9l:</p><p>&gt;&gt;&gt; import flask<br/>&gt;&gt;&gt; _</p><p>Si este enunciado no genera ning\\\\u00fan error puedes felicitarte a ti mismo, ya que Flask est\\\\u00e1 instalado y listo para usarse.</p><h2>Una aplicaci\\\\u00f3n \\\\u201cHola Mundo!\\\\u201d en Flask</h2><p>Si visitas el\\\\u00a0 <a href=\\\\\\\"http://flask.pocoo.org/\\\\\\\">website de Flask</a>, ser\\\\u00e1s recibido con una aplicaci\\\\u00f3n bien simple que solo tiene cinco lineas de c\\\\u00f3digo. En vez de repetir ese ejemplo rebuscado, te voy a mostrar una ligeramente mas elaborada que te dar\\\\u00e1 una buena estructura base para escribir aplicaciones mas grandes.</p><p>La aplicaci\\\\u00f3n estar\\\\u00e1 en un <i>paquete</i>. En Python, un subdirectorio que incluye un archivo <i>__init__.py</i> es considerando un paquete, y puede ser importado. Cuando importas un paquete, el archivo\\\\u00a0 <i>__init__.py</i> ejecuta y define que s\\\\u00edmbolos el paquete expone al mundo.</p><p>Creemos un paquete llamado app, que alojar\\\\u00e1 la aplicaci\\\\u00f3n. Aseg\\\\u00farate de estar en el directorio <i>microblog</i> y ejecuta el siguiente comando:</p><p>(venv) $ mkdir app</p><p>El archivo\\\\u00a0 <i>__init__.py</i> para el paquete app va a contener el siguiente c\\\\u00f3digo:</p><p>from flask import Flask<br/><br/>app = Flask(__name__)<br/><br/>from app import routes</p><p>El script anterior simplemente crea un objeto aplicaci\\\\u00f3n como una instancia de la clase\\\\u00a0 Flaskimportada desde el paquete flask. La variable __name__ pasada a la clase Flask es una variable predefinida de Python, la cual es establecida al nombre del m\\\\u00f3dulo en la que es usada. Flask usa la ubicaci\\\\u00f3n del m\\\\u00f3dulo enviado aqu\\\\u00ed como un punto de inicio cuando necesite cargar recursos asociados como archivos de plantilla, los cuales cubrir\\\\u00e9 en el <a href=\\\\\\\"https://lomelisan.wordpress.com/2015/05/31/el-mega-tutorial-de-flask-parte-ii-plantillas/\\\\\\\">Cap\\\\u00edtulo 2</a>.\\\\u00a0 Para todo prop\\\\u00f3sito pr\\\\u00e1ctico, pasar __name__ casi siempre ser\\\\u00e1 la configuraci\\\\u00f3n correcta de Flask. La aplicaci\\\\u00f3n luego importa el m\\\\u00f3dulo de routes, el cual a\\\\u00fan no existe.</p><p>Un aspecto que puede parecer confuso en un primer momento es que hay dos entidades llamadas app. El paquete app est\\\\u00e1 definido por el directorio <i>app</i> y el script <i>__init__.py</i>, y es referido en la sentencia from app import routes. La variable app es definida como una instancia de clase Flask en el script <i>__init__.py</i>, lo cual la hace miembro del paquete app.</p><p>Otro detalle es que el m\\\\u00f3dulo routes es importado al final del script y\\\\u00a0 no al comienzo como siempre se hace. Importar al final es un soluci\\\\u00f3n a las importaciones <i>circulares</i>, un problema com\\\\u00fan con aplicaciones Flask. Ver\\\\u00e1s que el m\\\\u00f3dulo routes necesita importar la variable appdefinida en este script, por lo que colocando una de las importaciones rec\\\\u00edprocas al final evita errores provenientes de la referencia mutua entre estos dos archivos.</p><p>Entonces, que va en el m\\\\u00f3dulo routes? Las rutas son las distintas URLs que la aplicaci\\\\u00f3n emplea. En Flask, los manejadores para las rutas de aplicaci\\\\u00f3n est\\\\u00e1n escritos como funciones Python, llamados <i>funciones view</i>. Las funciones Vista son mapeadas hacia una o mas rutas URLs para que Flask sepa que l\\\\u00f3gica ejecutar cuando un cliente requiera una URL dada.</p><p>Est\\\\u00e1 es tu primera funci\\\\u00f3n vista, la cual debes escribir en el nuevo m\\\\u00f3dulo llamado <i>app/routes.py</i>:</p><p>from app import app<br/><br/>@app.route(&#x27;/&#x27;)<br/>@app.route(&#x27;/index&#x27;)<br/>def index():<br/>    return &quot;Hello, World!&quot;</p><p>Est\\\\u00e1 funci\\\\u00f3n view en realidad es bastante simple, solo retorna un saludo en forma de string. Las dos lineas extra\\\\u00f1as @app.route sobre la funci\\\\u00f3n son <i>decoradores</i>, una caracter\\\\u00edstica \\\\u00fanica del lenguaje Python. Un decorador modifica la funci\\\\u00f3n que le sigue. Un patr\\\\u00f3n comun con los decoradores es usarlos para registrar funciones como callbacks para ciertos eventos. En este caso, el decorador @app.route crea una asociaci\\\\u00f3n entre la URL dada como argumento y la funci\\\\u00f3n. En este ejemplo hay dos decoradores, los cuales asocian las URLs / e /index a la funci\\\\u00f3n. Esto significa que cuando un navegador web requiera cualquiera de estas dos URLs, FLask invocar\\\\u00e1 esta funci\\\\u00f3n y pasar\\\\u00e1 como respuesta al navegador el valor de retorno de la misma. Si esto no se entiende a\\\\u00fan, lo har\\\\u00e1 en un momento cuando se corra la aplicaci\\\\u00f3n.</p><p>Para completar la aplicaci\\\\u00f3n, necesitas tener un script Python que defina la instansiaci\\\\u00f3n de aplicaic\\\\u00f3n Flask en el nivel mas alto. Llamemos a este script <i>microblog.py</i>, y defin\\\\u00e1moslo como una \\\\u00fanica linea que importa la instancia de aplicaci\\\\u00f3n:</p><p>from app import app</p><p>Recuerdas las dos entidades app? Aqu\\\\u00ed las puedes ver a la dos juntas en una misma sentencia. La instancia de aplicaci\\\\u00f3n Flask es llamada app y es un miembro del paquete\\\\u00a0 app. La sentencia from app import app importa la variable app que es miembro del paquete app. Si te resulta confuso, puedes renombrar cualquiera de las dos, el paquete o la variable.</p><p>Solo para asegurarnos que est\\\\u00e9s haciendo todo correctamente, abajo puedes ver un diagrama de la estructura del proyecto hasta ahora:</p><p>microblog/<br/>  venv/<br/>  app/<br/>    __init__.py<br/>    routes.py<br/>  microblog.py</p><p>Lo creas o no, esta primera versi\\\\u00f3n de la aplicaci\\\\u00f3n est\\\\u00e1 lista!. Sin embargo, antes de correrla, Flask necesita sabe como importarla mediante la configuraci\\\\u00f3n de la variable de ambiente FLASK_APP:</p><p>(venv) $ export FLASK_APP=microblog.py</p><p>Si est\\\\u00e1s usando Microsoft Windows, usa set en vez de export en el comando anterior.</p><p>Est\\\\u00e1s listo para volar? Con el siguiente comando puedes ya correr tu primera aplicaci\\\\u00f3n web:</p><p>(venv) $ flask run<br/> * Serving Flask app &quot;microblog&quot;<br/> * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)</p><p>Despu\\\\u00e9s de que el servidor inicie esperar\\\\u00e1 por conexiones cliente. La salida de flask runindica que el servidor est\\\\u00e1 corriendo en una direcci\\\\u00f3n IP 127.0.0.1, la cual siempre ser\\\\u00e1 la direcci\\\\u00f3n de tu computadora. Esta direcci\\\\u00f3n es tan com\\\\u00fan que tiene un nombre que probablemente hayas visto antes: <i>localhost</i>. Los servidores de red escuchan conexiones en un n\\\\u00famero de puerto espec\\\\u00edfico. Las aplicaciones desplegadas en servidores de producci\\\\u00f3n escuchan por lo general en el puerto 443, o a veces en el 80 si no cuentan con encriptaci\\\\u00f3n, pero acceder a estos puertos requiere de derechos de administrador. Dado que esta aplicaci\\\\u00f3n est\\\\u00e1 corriendo en un ambiente de desarrollo, Flask usa el puerto disponible 5000. Ahora abre tu navegador web e ingresa la siguiente URL en el campo de direcci\\\\u00f3n:</p><p>   http://localhost:5000/</p><p>Tambi\\\\u00e9n puedes usar la siguiente URL:</p><p>   http://localhost:5000/index</p><p>Vez el mapeo de rutas de la aplicaci\\\\u00f3n en acci\\\\u00f3n? La primera URL dirige hacia /, mientras que la segunda lo hace hacia /index. Ambas rutas est\\\\u00e1n asociadas con la \\\\u00fanica funci\\\\u00f3n vista en toda la aplicaci\\\\u00f3n, por lo que ellas producen la misma salida, la cual es el string que la funci\\\\u00f3n retorna. Si ingresas cualquier otra URL obtendr\\\\u00e1s un error, dado que solo dos URLs son reconocidas por la aplicaci\\\\u00f3n.</p><p>Cuando termines de jugar con el servidor puedes presionar Ctrl-C para detenerlo.</p><p>Felicidades, has completado el primer gran paso para convertirte en un desarrollador web!.</p>\\\", \\\"id\\\": \\\"61f71289-c718-4cc1-9e0d-6850ecc67616\\\"}]\", \"tagged_items\": [{\"pk\": 1, \"tag\": 1, \"content_object\": 9}, {\"pk\": 2, \"tag\": 2, \"content_object\": 9}, {\"pk\": 3, \"tag\": 3, \"content_object\": 9}], \"gallery_images\": []}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 10, "fields": {"page": 5, "submitted_for_moderation": false, "created_at": "2018-04-17T05:43:08.792Z", "user": 1, "content_json": "{\"pk\": 5, \"path\": \"0001000100010001\", \"depth\": 4, \"numchild\": 0, \"title\": \"Post 1 blbablabla\", \"draft_title\": \"Post 1 tutorial bla bkla\", \"slug\": \"post-1-tutorial-bla-bkla\", \"content_type\": 8, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/pythonpy-blog/post-1-tutorial-bla-bkla/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": \"2018-04-17T05:34:49.733Z\", \"last_published_at\": \"2018-04-17T05:34:49.733Z\", \"latest_revision_created_at\": \"2018-04-17T05:34:49.676Z\", \"live_revision\": 3, \"date\": \"2018-04-17\", \"excerpt\": \"resumen del post\", \"body\": \"[{\\\"type\\\": \\\"heading\\\", \\\"value\\\": \\\"Encabezado bla\\\", \\\"id\\\": \\\"717ac0cd-658b-4728-b589-725d80c1bcfd\\\"}, {\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Este<b> es un</b> <i>parrafo</i></p>\\\", \\\"id\\\": \\\"b5d19b48-7453-45d2-a9e8-025a02fee6e2\\\"}, {\\\"type\\\": \\\"image\\\", \\\"value\\\": 1, \\\"id\\\": \\\"ad4d39aa-dd4b-4fb0-800d-3810b8bff193\\\"}, {\\\"type\\\": \\\"two_columns\\\", \\\"value\\\": {\\\"left_column\\\": [{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Columna 1</p><p>Do you see any Teletubbies in here? Do you see a slender plastic tag clipped to my shirt with my name printed on it? Do you see a little Asian child with a blank expression on his face sitting outside on a mechanical helicopter that shakes when you put quarters in it? No? Well, that&#x27;s what you see at a toy store. And you must think you&#x27;re in a toy store, because you&#x27;re here shopping for an infant named Jeb.</p>\\\", \\\"id\\\": \\\"5b8ddbd1-8966-4e4c-86d7-6ddcb8939008\\\"}], \\\"right_column\\\": [{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>Columna2</p><p>Now that there is the Tec-9, a crappy spray gun from South Miami. This gun is advertised as the most popular gun in American crime. Do you believe that shit? It actually says that in the little book that comes with it: the most popular gun in American crime. Like they&#x27;re actually proud of that shit.</p><p></p>\\\", \\\"id\\\": \\\"91180dce-b8e9-4d34-9bb6-ff5d482fb859\\\"}]}, \\\"id\\\": \\\"7d370740-2aee-4044-a68d-09212f071107\\\"}, {\\\"type\\\": \\\"thumbnail\\\", \\\"value\\\": {\\\"image\\\": 2, \\\"url\\\": \\\"http://google.com\\\", \\\"media_type\\\": \\\"image\\\", \\\"text\\\": \\\"no se\\\"}, \\\"id\\\": \\\"c64141f0-5cee-424d-8060-d081eb644a57\\\"}]\", \"tagged_items\": [{\"pk\": null, \"tag\": 2, \"content_object\": 5}], \"gallery_images\": []}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 11, "fields": {"page": 10, "submitted_for_moderation": false, "created_at": "2018-04-17T05:44:33.325Z", "user": 1, "content_json": "{\"pk\": 10, \"path\": \"0001000100010002\", \"depth\": 4, \"numchild\": 0, \"title\": \"Lanzamiento de la Web de Python Py\", \"draft_title\": \"Lanzamiento de la Web de Python Py\", \"slug\": \"lanzamiento-de-la-web-de-python-py\", \"content_type\": 8, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/pythonpy-blog/lanzamiento-de-la-web-de-python-py/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": null, \"live_revision\": null, \"date\": \"2018-04-17\", \"excerpt\": \"\", \"body\": \"[{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>El <a href=\\\\\\\"http://mundohispanico.com/noticias/el-uscis-busca-impedir-que-empleados-sean-piadosos-al-evaluar-solicitudes-migratorias\\\\\\\"><b>Departamento de Ciudadan\\\\u00eda e Inmigraci\\\\u00f3n de Estados Unidos</b></a> (USCIS, por sus siglas en ingl\\\\u00e9s) anunci\\\\u00f3 el lanzamiento de una nueva herramienta para verificar la elegibilidad laboral.</p><p>A trav\\\\u00e9s del nuevo sitio web <a href=\\\\\\\"https://www.e-verify.gov/\\\\\\\">E-Verify.gov</a>, empleadores, trabajadores y p\\\\u00fablico en general podr\\\\u00e1n obtener gratuitamente informaci\\\\u00f3n electr\\\\u00f3nica sobre la elegibilidad de empleo.</p><p><b>Just launched! Employers and employees, check out the new</b> <a href=\\\\\\\"https://t.co/K4TTzYDNPw\\\\\\\"><b>https://t.co/K4TTzYDNPw</b></a> <b>website for tools and services.</b> <a href=\\\\\\\"https://t.co/iq2ckY3Gh6\\\\\\\"><b>pic.twitter.com/iq2ckY3Gh6</b></a><br/><b>\\\\u2014 USCIS (@USCIS)</b> <a href=\\\\\\\"https://twitter.com/USCIS/status/983697618323861504?ref_src=twsrc%5Etfw\\\\\\\"><b>April 10, 2018</b></a></p><p>El portal proporciona informaci\\\\u00f3n sobre el Formulario I-9, Verificaci\\\\u00f3n de Elegibilidad de Empleo, que incluye los derechos de los <a href=\\\\\\\"http://mundohispanico.com/dinero/por-que-estan-exigiendo-trabajadores-mexicanos-en-el-campo-estadounidense-esta-es-la-razon-video\\\\\\\"><b>trabajadores</b></a> y las responsabilidades del empleador en el proceso de verificaci\\\\u00f3n de empleo.</p><p>E-Verify.gov permitir\\\\u00e1 a los empleadores inscribirse directamente en el sistema de verificaci\\\\u00f3n.</p><p>\\\\u201cDurante la \\\\u00faltima d\\\\u00e9cada, E-Verify ha sido la piedra angular de nuestro compromiso continuo para ayudar a los empleadores a mantener una fuerza de trabajo legal\\\\u201d, dijo el director de USCIS, <a href=\\\\\\\"https://mundohispanico.com/noticias/inmigracion/revelan-que-el-director-de-uscis-que-borro-nacion-de-inmigrantes-es-hijo-de-una-inmigrante\\\\\\\"><b>Lee Francis Cissna</b></a>.</p><p>\\\\u201cE-Verify.gov ahora permite a los usuarios comprender mejor y navegar a trav\\\\u00e9s del proceso de verificaci\\\\u00f3n de empleo\\\\u201d, agreg\\\\u00f3.</p><p>USCIS insta a verificar nuevas contrataciones</p><p>Los empleadores pueden acceder a E-Verify.gov en cualquier momento y en cualquier lugar directamente desde un navegador web.</p><p>Casi todos los empleados son confirmados como autorizados para trabajar al instante, o en un per\\\\u00edodo m\\\\u00e1ximo de 24 horas.</p><p>El sistema, que cuenta con casi 800,000 empleadores inscritos, compara la informaci\\\\u00f3n del Formulario I-9 de un trabajador con los registros disponibles en el Departamento de Seguridad Nacional (DHS) y la Administraci\\\\u00f3n del Seguro Social, para verificar la autorizaci\\\\u00f3n para trabajar en Estados Unidos.</p><p>El 18 de abril de 2017, el presidente Donald <a href=\\\\\\\"http://mundohispanico.com/dinero/trump-escribe-sobre-el-desempleo-y-les-reprocha-a-los-hispanos-por-twitter\\\\\\\"><b>Trump</b></a> firm\\\\u00f3 la orden ejecutiva \\\\u201cBuy American and Hire American\\\\u201d, con el objetivo de ayudar a reducir la inmigraci\\\\u00f3n ilegal y preservar empleos para los trabajadores Estados Unidos.</p><p>En este sentido, USCIS exhort\\\\u00f3 a los empleadores a verificar las nuevas contrataciones a trav\\\\u00e9s de E-Verify.gov.</p>\\\", \\\"id\\\": \\\"d3442924-54cf-4d41-9309-7f5fd4af6731\\\"}]\", \"tagged_items\": [], \"gallery_images\": []}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 12, "fields": {"page": 10, "submitted_for_moderation": false, "created_at": "2018-04-17T05:45:31.092Z", "user": 1, "content_json": "{\"pk\": 10, \"path\": \"0001000100010002\", \"depth\": 4, \"numchild\": 0, \"title\": \"Lanzamiento de la Web de Python Py\", \"draft_title\": \"Lanzamiento de la Web de Python Py\", \"slug\": \"lanzamiento-de-la-web-de-python-py\", \"content_type\": 8, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/pythonpy-blog/lanzamiento-de-la-web-de-python-py/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": \"2018-04-17T05:44:33.366Z\", \"last_published_at\": \"2018-04-17T05:44:33.366Z\", \"latest_revision_created_at\": \"2018-04-17T05:44:33.325Z\", \"live_revision\": 11, \"date\": \"2018-04-17\", \"excerpt\": \"\", \"body\": \"[{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p>El <a href=\\\\\\\"http://mundohispanico.com/noticias/el-uscis-busca-impedir-que-empleados-sean-piadosos-al-evaluar-solicitudes-migratorias\\\\\\\"><b>Departamento de Ciudadan\\\\u00eda e Inmigraci\\\\u00f3n de Estados Unidos</b></a> (USCIS, por sus siglas en ingl\\\\u00e9s) anunci\\\\u00f3 el lanzamiento de una nueva herramienta para verificar la elegibilidad laboral.</p><p>A trav\\\\u00e9s del nuevo sitio web <a href=\\\\\\\"https://www.e-verify.gov/\\\\\\\">E-Verify.gov</a>, empleadores, trabajadores y p\\\\u00fablico en general podr\\\\u00e1n obtener gratuitamente informaci\\\\u00f3n electr\\\\u00f3nica sobre la elegibilidad de empleo.</p><p><b>Just launched! Employers and employees, check out the new</b> <a href=\\\\\\\"https://t.co/K4TTzYDNPw\\\\\\\"><b>https://t.co/K4TTzYDNPw</b></a> <b>website for tools and services.</b> <a href=\\\\\\\"https://t.co/iq2ckY3Gh6\\\\\\\"><b>pic.twitter.com/iq2ckY3Gh6</b></a><br/><b>\\\\u2014 USCIS (@USCIS)</b> <a href=\\\\\\\"https://twitter.com/USCIS/status/983697618323861504?ref_src=twsrc%5Etfw\\\\\\\"><b>April 10, 2018</b></a></p><p>El portal proporciona informaci\\\\u00f3n sobre el Formulario I-9, Verificaci\\\\u00f3n de Elegibilidad de Empleo, que incluye los derechos de los <a href=\\\\\\\"http://mundohispanico.com/dinero/por-que-estan-exigiendo-trabajadores-mexicanos-en-el-campo-estadounidense-esta-es-la-razon-video\\\\\\\"><b>trabajadores</b></a> y las responsabilidades del empleador en el proceso de verificaci\\\\u00f3n de empleo.</p><p>E-Verify.gov permitir\\\\u00e1 a los empleadores inscribirse directamente en el sistema de verificaci\\\\u00f3n.</p><p>\\\\u201cDurante la \\\\u00faltima d\\\\u00e9cada, E-Verify ha sido la piedra angular de nuestro compromiso continuo para ayudar a los empleadores a mantener una fuerza de trabajo legal\\\\u201d, dijo el director de USCIS, <a href=\\\\\\\"https://mundohispanico.com/noticias/inmigracion/revelan-que-el-director-de-uscis-que-borro-nacion-de-inmigrantes-es-hijo-de-una-inmigrante\\\\\\\"><b>Lee Francis Cissna</b></a>.</p><p>\\\\u201cE-Verify.gov ahora permite a los usuarios comprender mejor y navegar a trav\\\\u00e9s del proceso de verificaci\\\\u00f3n de empleo\\\\u201d, agreg\\\\u00f3.</p><p>USCIS insta a verificar nuevas contrataciones</p><p>Los empleadores pueden acceder a E-Verify.gov en cualquier momento y en cualquier lugar directamente desde un navegador web.</p><p>Casi todos los empleados son confirmados como autorizados para trabajar al instante, o en un per\\\\u00edodo m\\\\u00e1ximo de 24 horas.</p><p>El sistema, que cuenta con casi 800,000 empleadores inscritos, compara la informaci\\\\u00f3n del Formulario I-9 de un trabajador con los registros disponibles en el Departamento de Seguridad Nacional (DHS) y la Administraci\\\\u00f3n del Seguro Social, para verificar la autorizaci\\\\u00f3n para trabajar en Estados Unidos.</p><p></p>\\\", \\\"id\\\": \\\"d3442924-54cf-4d41-9309-7f5fd4af6731\\\"}]\", \"tagged_items\": [], \"gallery_images\": []}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 13, "fields": {"page": 4, "submitted_for_moderation": false, "created_at": "2018-04-17T05:50:51.457Z", "user": 1, "content_json": "{\"pk\": 4, \"path\": \"000100010001\", \"depth\": 3, \"numchild\": 2, \"title\": \"PythonPy Blog\", \"draft_title\": \"PythonPy Blog\", \"slug\": \"blog\", \"content_type\": 7, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/pythonpy-blog/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": true, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": \"2018-04-17T05:30:57.862Z\", \"last_published_at\": \"2018-04-17T05:35:13.879Z\", \"latest_revision_created_at\": \"2018-04-17T05:35:13.816Z\", \"live_revision\": 4, \"intro\": \"<p>Este es el blog</p>\"}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 14, "fields": {"page": 11, "submitted_for_moderation": false, "created_at": "2018-04-17T05:54:01.943Z", "user": 1, "content_json": "{\"pk\": 11, \"path\": \"0001000100040002\", \"depth\": 4, \"numchild\": 0, \"title\": \"Tutorial de Django\", \"draft_title\": \"Tutorial de Django\", \"slug\": \"tutorial-de-django\", \"content_type\": 8, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/tutoriales/tutorial-de-django/\", \"owner\": 1, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": null, \"live_revision\": null, \"date\": \"2018-04-17\", \"excerpt\": \"\", \"body\": \"[{\\\"type\\\": \\\"paragraph\\\", \\\"value\\\": \\\"<p><b>Gu\\\\u00eda de instalaci\\\\u00f3n r\\\\u00e1pida</b></p><p>Antes de poder usar Django es necesario instalarlo. Existe una <a href=\\\\\\\"https://docs.djangoproject.com/en/1.8/topics/install\\\\\\\">gu\\\\u00eda de instalaci\\\\u00f3n completa</a> que cubre todas las posibilidades; esta gu\\\\u00eda es simple, cubre una instalaci\\\\u00f3n m\\\\u00ednima que servir\\\\u00e1 mientras se recorre la introducci\\\\u00f3n.</p><h2><b>Instalar Python</b></h2><p>Siendo un framework web escrito en Python, Django requiere Python. Funciona con Python 2.7, 3.2, 3.3, o 3.4. Estas versiones de Python incluyen una base de datos liviana llamada <a href=\\\\\\\"http://sqlite.org/\\\\\\\">SQLite</a>, as\\\\u00ed que no es necesario configurar un motor de base datos inmediatamente.</p><p>Para obtener la \\\\u00faltima versi\\\\u00f3n de Python, ir a <a href=\\\\\\\"https://www.python.org/download/\\\\\\\">https://www.python.org/download/</a> o instalar a trav\\\\u00e9s del administrador de paquetes de tu sistema operativo.</p><p><b>Django en Jython</b></p><p>Si us\\\\u00e1s <a href=\\\\\\\"http://www.jython.org/\\\\\\\">Jython</a> (implementaci\\\\u00f3n de Python para la plataforma Java), es necesario seguir algunas pasos adicionales. Ver detalles en <a href=\\\\\\\"https://docs.djangoproject.com/en/1.8/howto/jython\\\\\\\">/howto/jython</a>.</p><p>Pod\\\\u00e9s verificar que Python est\\\\u00e1 instalado corriendo python en tu shell; deber\\\\u00edas ver algo como:</p><p>Python 3.3.3 (default, Nov 26 2013, 13:33:18)<br/>[GCC 4.8.2] on linux<br/>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.<br/>&gt;&gt;&gt;<br/></p><h2><b>Configurar una base de datos</b></h2><p>Este paso s\\\\u00f3lo es necesario si quisieras trabajar con un motor de base de datos m\\\\u00e1s \\\\u201cgrande\\\\u201d como PostgreSQL, MySQL u Oracle. Para ello consult\\\\u00e1 la <a href=\\\\\\\"https://docs.djangoproject.com/en/1.8/topics/install/#database-installation\\\\\\\">informaci\\\\u00f3n sobre la instalaci\\\\u00f3n de base de datos</a>.</p><h2><b>Borrar versiones anteriores de Django</b></h2><p>Si est\\\\u00e1s actualizando una versi\\\\u00f3n previa de Django es necesario <a href=\\\\\\\"https://docs.djangoproject.com/en/1.8/topics/install/#removing-old-versions-of-django\\\\\\\">desinstalar la versi\\\\u00f3n anterior antes de instalar una nueva</a>.</p><h2><b>Instalar Django</b></h2><p>Existen tres opciones f\\\\u00e1ciles de instalar Django:</p><ul><li>Instalar una versi\\\\u00f3n de Django <a href=\\\\\\\"https://docs.djangoproject.com/en/1.8/misc/distributions\\\\\\\">provista por tu sistema operativo</a>. Esta es la opci\\\\u00f3n m\\\\u00e1s r\\\\u00e1pida para aquellos que tienen un sistema operativo que distribuye Django.</li><li><a href=\\\\\\\"https://docs.djangoproject.com/en/1.8/topics/install/#installing-official-release\\\\\\\">Instalar un release oficial</a>. Esta es la mejor alternativa para los usuarios qie quieren un n\\\\u00famero de versi\\\\u00f3n estable y que no les preocupa no correr la versi\\\\u00f3n m\\\\u00e1s reciente de Django.</li><li><a href=\\\\\\\"https://docs.djangoproject.com/en/1.8/topics/install/#installing-development-version\\\\\\\">Instalar la \\\\u00faltima versi\\\\u00f3n de desarrollo</a>. Esta es la mejor opci\\\\u00f3n para los usuarios que quieren las caracter\\\\u00edsticas m\\\\u00e1s recientes y que no tienen miedo de correr c\\\\u00f3digo nuevo.</li></ul><p><b>Siempre recurrir a la versi\\\\u00f3n de la documentaci\\\\u00f3n que corresponde a la versi\\\\u00f3n de Django que est\\\\u00e1s usando!</b></p><p>Si segu\\\\u00eds cualquiera de los dos primeros pasos, hay que estar atentos a las partes de la documentaci\\\\u00f3n marcadas como <b>new in development version</b> (nuevo en la versi\\\\u00f3n de desarrollo). Esta frase indica caracter\\\\u00edsticas que est\\\\u00e1n solamente disponibles en la versi\\\\u00f3n de desarrollo de Django, y que muy posibiblemente no funcionen en un release oficial.</p><h2><b>Verificando</b></h2><p>Para verificar que Django es accesible desde Python, tipe\\\\u00e1 python en tu shell. Una vez en el prompt de Python, intent\\\\u00e1 importar Django:</p><p>&gt;&gt;&gt; import django<br/>&gt;&gt;&gt; print(django.get_version())<br/>1.8<br/></p><p>You may have another version of Django installed.</p>\\\", \\\"id\\\": \\\"ce7a153b-6a52-4813-bd04-17a4101cbf7f\\\"}]\", \"tagged_items\": [{\"pk\": 5, \"tag\": 1, \"content_object\": 11}, {\"pk\": 6, \"tag\": 2, \"content_object\": 11}, {\"pk\": 7, \"tag\": 4, \"content_object\": 11}], \"gallery_images\": []}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 15, "fields": {"page": 3, "submitted_for_moderation": false, "created_at": "2018-04-17T05:55:21.004Z", "user": 1, "content_json": "{\"pk\": 3, \"path\": \"00010001\", \"depth\": 2, \"numchild\": 4, \"title\": \"Inicio\", \"draft_title\": \"Home\", \"slug\": \"home\", \"content_type\": 3, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/\", \"owner\": null, \"seo_title\": \"\", \"show_in_menus\": true, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": null, \"last_published_at\": null, \"latest_revision_created_at\": null, \"live_revision\": null, \"body\": \"<p></p>\"}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 16, "fields": {"page": 3, "submitted_for_moderation": false, "created_at": "2018-04-17T05:55:54.589Z", "user": 1, "content_json": "{\"pk\": 3, \"path\": \"00010001\", \"depth\": 2, \"numchild\": 4, \"title\": \"Inicio\", \"draft_title\": \"Inicio\", \"slug\": \"home\", \"content_type\": 3, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/\", \"owner\": null, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": \"2018-04-17T05:55:21.059Z\", \"last_published_at\": \"2018-04-17T05:55:21.059Z\", \"latest_revision_created_at\": \"2018-04-17T05:55:21.004Z\", \"live_revision\": 15, \"body\": \"<p></p>\"}", "approved_go_live_at": null}}, {"model": "wagtailcore.pagerevision", "pk": 17, "fields": {"page": 3, "submitted_for_moderation": false, "created_at": "2018-04-17T05:56:24.628Z", "user": 1, "content_json": "{\"pk\": 3, \"path\": \"00010001\", \"depth\": 2, \"numchild\": 4, \"title\": \"Inicio\", \"draft_title\": \"Inicio\", \"slug\": \"home\", \"content_type\": 3, \"live\": true, \"has_unpublished_changes\": false, \"url_path\": \"/home/\", \"owner\": null, \"seo_title\": \"\", \"show_in_menus\": false, \"search_description\": \"\", \"go_live_at\": null, \"expire_at\": null, \"expired\": false, \"locked\": false, \"first_published_at\": \"2018-04-17T05:55:21.059Z\", \"last_published_at\": \"2018-04-17T05:55:54.622Z\", \"latest_revision_created_at\": \"2018-04-17T05:55:54.589Z\", \"live_revision\": 16, \"body\": \"<p>PythonPy website</p>\"}", "approved_go_live_at": null}}, {"model": "wagtailcore.grouppagepermission", "pk": 1, "fields": {"group": 1, "page": 1, "permission_type": "add"}}, {"model": "wagtailcore.grouppagepermission", "pk": 2, "fields": {"group": 1, "page": 1, "permission_type": "edit"}}, {"model": "wagtailcore.grouppagepermission", "pk": 3, "fields": {"group": 1, "page": 1, "permission_type": "publish"}}, {"model": "wagtailcore.grouppagepermission", "pk": 4, "fields": {"group": 2, "page": 1, "permission_type": "add"}}, {"model": "wagtailcore.grouppagepermission", "pk": 5, "fields": {"group": 2, "page": 1, "permission_type": "edit"}}, {"model": "wagtailcore.grouppagepermission", "pk": 6, "fields": {"group": 1, "page": 1, "permission_type": "lock"}}, {"model": "wagtailcore.collection", "pk": 1, "fields": {"path": "0001", "depth": 1, "numchild": 0, "name": "Root"}}, {"model": "wagtailcore.groupcollectionpermission", "pk": 1, "fields": {"group": 2, "collection": 1, "permission": 1}}, {"model": "wagtailcore.groupcollectionpermission", "pk": 2, "fields": {"group": 1, "collection": 1, "permission": 1}}, {"model": "wagtailcore.groupcollectionpermission", "pk": 3, "fields": {"group": 2, "collection": 1, "permission": 2}}, {"model": "wagtailcore.groupcollectionpermission", "pk": 4, "fields": {"group": 1, "collection": 1, "permission": 2}}, {"model": "wagtailcore.groupcollectionpermission", "pk": 5, "fields": {"group": 2, "collection": 1, "permission": 5}}, {"model": "wagtailcore.groupcollectionpermission", "pk": 6, "fields": {"group": 1, "collection": 1, "permission": 5}}, {"model": "wagtailcore.groupcollectionpermission", "pk": 7, "fields": {"group": 2, "collection": 1, "permission": 6}}, {"model": "wagtailcore.groupcollectionpermission", "pk": 8, "fields": {"group": 1, "collection": 1, "permission": 6}}, {"model": "taggit.tag", "pk": 1, "fields": {"name": "tutorial", "slug": "tutorial"}}, {"model": "taggit.tag", "pk": 2, "fields": {"name": "python", "slug": "python"}}, {"model": "taggit.tag", "pk": 3, "fields": {"name": "flask", "slug": "flask"}}, {"model": "taggit.tag", "pk": 4, "fields": {"name": "django", "slug": "django"}}, {"model": "home.homepage", "pk": 3, "fields": {"body": "<p>PythonPy website</p>"}}, {"model": "home.defaultpage", "pk": 6, "fields": {"body": "[{\"type\": \"heading\", \"value\": \"Quienes somos?\", \"id\": \"f2de690c-5992-4593-8a03-85855e226abc\"}, {\"type\": \"paragraph\", \"value\": \"<p>Que buena pregunta</p>\", \"id\": \"ea2964c3-cb57-413a-8fcf-8ca6f5a1520b\"}]"}}, {"model": "home.defaultpage", "pk": 7, "fields": {"body": "[{\"type\": \"paragraph\", \"value\": \"<h4>Pregunta 1?</h4><p>You think water moves fast? You should see ice. It moves like it has a mind. Like it knows it killed the world once and got a taste for murder. After the avalanche, it took us a week to climb out. Now, I don&#x27;t know exactly when we turned on each other, but I know that seven of us survived the slide... and only five made it out. Now we took an oath, that I&#x27;m breaking now. We said we&#x27;d say it was the snow that killed the other two, but it wasn&#x27;t. Nature is lethal but it doesn&#x27;t hold a candle to man.</p><p></p><h4>Pregunta 2?</h4><p>The lysine contingency - it&#x27;s intended to prevent the spread of the animals is case they ever got off the island. Dr. Wu inserted a gene that makes a single faulty enzyme in protein metabolism. The animals can&#x27;t manufacture the amino acid lysine. Unless they&#x27;re continually supplied with lysine by us, they&#x27;ll slip into a coma and die.</p><p></p><h4>Pregunta 3?</h4><p>sijsgflsgfjlsfgnsfg</p><p>sgsgdsgdsgds</p><p>sdgd</p><p>s</p><p></p><p></p><h4>Pregunta 4?</h4><p></p><p>NOPE</p>\", \"id\": \"8379b1b4-7f75-4586-a086-ee5e95eb2ecb\"}]"}}, {"model": "blog.blogindexpage", "pk": 4, "fields": {"intro": "<p>Este es el blog</p>"}}, {"model": "blog.blogindexpage", "pk": 8, "fields": {"intro": "<p></p>"}}, {"model": "blog.blogpagetag", "pk": 1, "fields": {"tag": 1, "content_object": 9}}, {"model": "blog.blogpagetag", "pk": 2, "fields": {"tag": 2, "content_object": 9}}, {"model": "blog.blogpagetag", "pk": 3, "fields": {"tag": 3, "content_object": 9}}, {"model": "blog.blogpagetag", "pk": 4, "fields": {"tag": 2, "content_object": 5}}, {"model": "blog.blogpagetag", "pk": 5, "fields": {"tag": 1, "content_object": 11}}, {"model": "blog.blogpagetag", "pk": 6, "fields": {"tag": 2, "content_object": 11}}, {"model": "blog.blogpagetag", "pk": 7, "fields": {"tag": 4, "content_object": 11}}, {"model": "blog.blogpage", "pk": 5, "fields": {"date": "2018-04-17", "excerpt": "resumen del post", "body": "[{\"type\": \"heading\", \"value\": \"Encabezado bla\", \"id\": \"717ac0cd-658b-4728-b589-725d80c1bcfd\"}, {\"type\": \"paragraph\", \"value\": \"<p>Este<b> es un</b> <i>parrafo</i></p>\", \"id\": \"b5d19b48-7453-45d2-a9e8-025a02fee6e2\"}, {\"type\": \"image\", \"value\": 1, \"id\": \"ad4d39aa-dd4b-4fb0-800d-3810b8bff193\"}, {\"type\": \"two_columns\", \"value\": {\"left_column\": [{\"type\": \"paragraph\", \"value\": \"<p>Columna 1</p><p>Do you see any Teletubbies in here? Do you see a slender plastic tag clipped to my shirt with my name printed on it? Do you see a little Asian child with a blank expression on his face sitting outside on a mechanical helicopter that shakes when you put quarters in it? No? Well, that&#x27;s what you see at a toy store. And you must think you&#x27;re in a toy store, because you&#x27;re here shopping for an infant named Jeb.</p>\", \"id\": \"5b8ddbd1-8966-4e4c-86d7-6ddcb8939008\"}], \"right_column\": [{\"type\": \"paragraph\", \"value\": \"<p>Columna2</p><p>Now that there is the Tec-9, a crappy spray gun from South Miami. This gun is advertised as the most popular gun in American crime. Do you believe that shit? It actually says that in the little book that comes with it: the most popular gun in American crime. Like they&#x27;re actually proud of that shit.</p><p></p>\", \"id\": \"91180dce-b8e9-4d34-9bb6-ff5d482fb859\"}]}, \"id\": \"7d370740-2aee-4044-a68d-09212f071107\"}, {\"type\": \"thumbnail\", \"value\": {\"image\": 2, \"url\": \"http://google.com\", \"media_type\": \"image\", \"text\": \"no se\"}, \"id\": \"c64141f0-5cee-424d-8060-d081eb644a57\"}]"}}, {"model": "blog.blogpage", "pk": 9, "fields": {"date": "2018-04-17", "excerpt": "", "body": "[{\"type\": \"paragraph\", \"value\": \"<p>Bienvenido!, est\\u00e1s a punto de empezar tu viaje en el aprendizaje de creaci\\u00f3n de aplicaciones web con <a href=\\\"https://python.org/\\\">Python</a> y el framework <a href=\\\"http://flask.pocoo.org/\\\">Flask</a>. En el primer cap\\u00edtulo, aprender\\u00e1s como configurar un proyecto Flask. Para el final de este cap\\u00edtulo tendr\\u00e1s una aplicaci\\u00f3n web Flask simple corriendo en tu computador!</p><p>Para tu referencia, abajo est\\u00e1 una lista con los art\\u00edculos en esta serie.</p><ul><li><a href=\\\"https://lomelisan.wordpress.com/2015/05/29/mega-tutorial-de-flask-python-1era-parte-hola-mundo/\\\">Parte 1: Hola Mundo! </a>(este art\\u00edculo)</li><li><a href=\\\"https://lomelisan.wordpress.com/2015/05/31/el-mega-tutorial-de-flask-parte-ii-plantillas/\\\">Parte 2: Plantillas</a></li><li><a href=\\\"https://lomelisan.wordpress.com/2015/06/01/el-mega-tutorial-de-flask-parte-iii-formularios-web/\\\">Parte 3: Formularios Web</a></li><li><a href=\\\"https://lomelisan.wordpress.com/2015/06/02/el-mega-tutorial-de-flask-parte-iv-base-de-datos/\\\">Parte 4: Base de datos [en traducci\\u00f3n]</a></li><li>Parte 5: Acceso de Usuario [a\\u00fan no traducido]</li><li>Parte 6: P\\u00e1ginas de perfil y Avatares [a\\u00fan no traducido]</li><li>Parte 7: Manejo de errores [a\\u00fan no traducido]</li><li>Parte 8: Seguidores [disponible el 23/01/18]</li><li>Parte 9: Paginaci\\u00f3n [disponible el 30/01/18]</li><li>Parte 10: Soporte de Email [disponible el 06/02/18]</li><li>Parte 11: Lavado de Cara [disponible el 13/02/18]</li><li>Parte 12: Fechas y Tiempos [disponible el 20/02/18]</li><li>Parte 13: I18n y L10n [disponible el 27/02/18]</li><li>Parte 14: Ajax [disponible el 06/03/18]</li><li>Parte 15: Una mejor estructura de aplicaci\\u00f3n [disponible el 13/03/18]</li><li>Parte 16: Full-Text Search [disponible el 20/03/18]</li><li>Parte 17: Despliegue en GNU/Linux [disponible el 27/03/18]</li><li>Parte 18: Despliegue en Heroku [disponible el 03/04/18]</li><li>Parte 19: Depliegue en contenedores Dockers [disponible el 10/04/18]</li><li>Parte 20: Un poco de magia JavaScript [disponible el 17/04/18]</li><li>Parte 21: Notificaciones de Usuario [disponible el 24/04/18]</li><li>Parte 22: Trabajos de fondo [disponible el 01/05/18]</li><li>Parte 23: Interfaces programadas de aplicaci\\u00f3n (APIs) [disponible el 08/05/18]</li></ul><p><i>Nota 1: Si est\\u00e1s buscando la versi\\u00f3n anterior de este tutorial, est\\u00e1</i> <a href=\\\"https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world-legacy\\\"><i>aqu\\u00ed</i></a><i>.</i></p><p><i>Nota 2: Si te gustar\\u00eda apoyar mi trabajo en mi</i> <a href=\\\"https://blog.miguelgrinberg.com/\\\"><i>blog</i></a><i>, o simplemente no tienes paciencia para esperar por los art\\u00edculos semanales, estoy ofreciendo la versi\\u00f3n completa de este tutorial empaquetado en forma de libro online o v\\u00eddeos. Para mas informaci\\u00f3n, visita</i> <a href=\\\"https://learn.miguelgrinberg.com/\\\"><i>learn.miguelgrinberg.com</i></a><i>.</i><br/></p><p>Todo los ejemplos de c\\u00f3digo presentados en este tutorial est\\u00e1n hospedados en un repositorio GitHub. Descargar el c\\u00f3digo desde GitHub puede ahorrarte bastante escritura, pero personalmente recomiendo encarecidamente que escribas el c\\u00f3digo tu mismo, por lo menos en los primeros cap\\u00edtulos. Una vez que te familiarices con Flask y la aplicaci\\u00f3n de ejemplo puedes acceder al c\\u00f3digo directamente desde GitHub si la escritura de c\\u00f3digo se vuelve muy tediosa.</p><p>En el principio de cada cap\\u00edtulo, voy a darte tres enlaces GitHub que pueden ser \\u00fatiles mientras trabajas a trav\\u00e9s del cap\\u00edtulo. El enlace <b>Browse</b> abrir\\u00e1 el repositorio GitHub para Microblog en el lugar donde los cambios\\u00a0 para el cap\\u00edtulo que est\\u00e1s leyendo fueron a\\u00f1adidos, sin incluir ning\\u00fan cambio introducido en los cap\\u00edtulos futuros. El enlace <b>Zip</b> es un enlace de descarga para un archivo zip incluyendo la aplicaci\\u00f3n entera para el momento y con los cambios del cap\\u00edtulo actual. El enlace <b>Diff</b> abrir\\u00e1 una vista gr\\u00e1fica con todos los cambios que fueron realizados en el cap\\u00edtulo que est\\u00e1s por leer.</p><p><i>Los enlaces GitHub para este cap\\u00edtulo son:</i> <a href=\\\"https://github.com/miguelgrinberg/microblog/tree/v0.1\\\"><i>Browse</i></a><i>,</i> <a href=\\\"https://github.com/miguelgrinberg/microblog/archive/v0.1.zip\\\"><i>Zip</i></a><i>,</i> <a href=\\\"https://github.com/miguelgrinberg/microblog/compare/v0.0...v0.1\\\"><i>Diff</i></a><i>.</i></p><h2>Instalando Python</h2><p>Si no tienes Python instalado en tu computador, ve e inst\\u00e1lalo ahora. Si tu sistema operativo no te provee un paquete Python, puedes descargar un instalador desde el <a href=\\\"http://python.org/download/\\\">sitio oficial de Python</a>. Si est\\u00e1s usando Microsoft Windows junto con WSL o Cygwin, recuerda que no estar\\u00e1s usando la versi\\u00f3n nativa de Python, sino una versi\\u00f3n amigable a Unix que necesitas obtener desde Ubuntu (si est\\u00e1s usando WSL) o desde Cygwin.</p><p>Para asegurarte que tu instalaci\\u00f3n de Python es funcional, puedes abrir una ventana del terminal y escribir python3, o si eso no resulta, solo python. Esto es lo que deber\\u00eda aparecer:</p><p>$ python3<br/>Python 3.5.2 (default, Nov 17 2016, 17:05:23)<br/>[GCC 5.4.0 20160609] on linux<br/>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.<br/>&gt;&gt;&gt; _</p><p>El int\\u00e9rprete Python est\\u00e1 esperando ahora en una prompt interactiva, donde puedes introducir sentencias Python. En cap\\u00edtulos futuros aprender\\u00e1s para que clase de cosas esta prompt interactiva es \\u00fatil. Pero por ahora, haz confirmado que tienes Python instalado en tu sistema. Para salir de la prompt interactiva, puedes escribir exit() y presiona Enter. En las versiones Linux y Mac OS X de Python tambien puedes presionar Ctrl-D para salir del int\\u00e9rprete. En Windows, el atajo de salida es Ctrl-Z seguido de Enter.</p><h2>Instalando Flask</h2><p>El siguiente paso es instalar Flask, pero antes de adentrarme en ello quiero contarte sobre las mejores pr\\u00e1cticas asociadas con la instalaci\\u00f3n de <i>paquetes</i> Python.</p><p>En Python, paquetes como Flask est\\u00e1n dispobibles en un repositorio p\\u00fablico, desde donde cualquiera puede descargarlos e instalarlos. El repositorio oficial del paquete Python es llamado <a href=\\\"https://pypi.python.org/pypi\\\">PyPI</a>, por sus siglas en ingl\\u00e9s \\u201cPython Package Index\\u201d (alguna gente tambi\\u00e9n se refiere a este repositorio como la \\u201ccheese shop\\u201d). Instalar un paquete desde PyPI es bastante simple, debido a que Python viene con una herramienta llamada pip que hace este trabajo (en Python 2.7 pipno viene incluido con Python y necesita ser instalado por separado).</p><p>Para instalar un paquete en tu m\\u00e1qina, usa el comando pip como sigue:</p><p>$ pip install &lt;package-name&gt;</p><p>Curiosamente, este m\\u00e9todo de instalaci\\u00f3n de paquetes no funcionar\\u00e1 para la mayor\\u00eda de los casos.\\u00a0 Si tu int\\u00e9rprete Python fue instalado globalmente para todos los usuarios de tu computadora, es probable que tu cuenta de usuario regular no tenga permisos para hacer modificaciones, por lo que la \\u00fanica manera de ejecutar el comando de arriba es desde una cuenta administrador. Pero incluso sin esa complicaci\\u00f3n, considera que ocurre cuando se instala un paquete de la anterior manera. La herramienta pip va a descargar el paquete desde PyPI, y luego lo a\\u00f1adir\\u00e1 a tu instalaci\\u00f3n de Python.\\u00a0 Desde ese momento. cada script Python que tengas en tu sistema tendr\\u00e1 acceso a ese paquete. Imagina una situaci\\u00f3n en la que hayas terminado una aplicaci\\u00f3n web usando la versi\\u00f3n 0.11 de Flask, la cual fue la versi\\u00f3n mas actual de Flask cuando empezaste, pero ahora ha sido sucedido por la versi\\u00f3n 0.12. Ahora quieres empezar una segunda aplicaci\\u00f3n, por lo que te gustar\\u00eda usar la versi\\u00f3n 0.12, pero si remplazar las versi\\u00f3n 0.11 que has instalado corres el riegos de romper tu aplicaci\\u00f3n antigua. Vez lo que ocurre? Ser\\u00eda ideal si fuese posible instalar Flask 0.11 para ser usado por tu antigua aplicaci\\u00f3n y tambi\\u00e9n instalar Flask 0.12 para tu nueva aplicaci\\u00f3n.</p><p>Para resolver este problema de mantener diferentes versiones de paquetes para diferentes aplicaciones, Python usa el concepto de <i>ambientes virtuales</i>. Un ambiente virtual es una copia completa del interpete Python. Cuando instalas paquetes en un ambiente virtual, el sistema en si del interprete Python no es afectado, solo se afecta la copia. Por lo tanto, la soluci\\u00f3n para tener total libertad de instalar cualquiera de las versiones de tus paquetes para cada aplicaci\\u00f3n es usar un ambiente virtual distinto para cada aplicaci\\u00f3n. Los ambientes virtuales tiene el beneficio extra de que son pose\\u00eddo por el usuario que los crea, por lo que no necesitan una cuenta administrador.</p><p>Comencemos creando un directorio donde el proyecto tendr\\u00e1 vida. Llamar\\u00e9 a este directorio <i>microblog</i>, ya que ese es el nombre de la aplicaci\\u00f3n:</p><p>$ mkdir microblog<br/>$ cd microblog</p><p>Si est\\u00e1s usando la Python versi\\u00f3n 3, ya cuentas con los ambientes virtuales integrados, por lo que solo necesitas esto para crear uno:</p><p>$ python3 -m venv venv</p><p>Con este comando, estoy pidiendo a Python correr el paquete venv, el cual crea un ambiente virtual llamado venv. El primer venv en la sentencia es el nombre del paquete de ambiente virtuales de Python y el segundo es el nombre del ambiente virtual que voy a usar para este proyecto. Si te resulta confuso, puedes reemplazar el segundo venv con un nombre diferente que tu quieras asignar a tu ambiente virtual. En general yo creo mis ambientes virtuales con el nombre venv en el directorio del proyecto, para que cuando haga cd dentro del proyecto encuentre su respectivo ambiente virtual.</p><p>Recuerda que en algunos sistemas operativos puede que necesites usar python en vez de python3 en la sentencia anterior. Algunas instalaciones usan python para versiones Python 2.x y python3 para las versiones 3.x, mientras que otras usan python para las versiones 3.x.</p><p>Despu\\u00e9s de que el comando se ejecute, vas a tener un directorio llamado <i>venv</i> donde tus archivos del ambiente virtual estar\\u00e1n almacenados.</p><p>Si est\\u00e1s usando cualquier versi\\u00f3n anterior a la 3.4\\u00a0 (y eso incluye la versi\\u00f3n 2.7), los ambientes virtual no est\\u00e1n soportados de manera nativa. Para aquellas versiones de Python, necesitas descargar e instalar una herramienta de terceros llamada <a href=\\\"https://virtualenv.pypa.io/\\\">virtualenv</a> antes de que puedas crear ambiente virtuales. Una vez que virtualenv est\\u00e9 instalado, podr\\u00e1s crear ambientes virtuales con el siguiente comando:</p><p>$ virtualenv venv</p><p>Sin importar el m\\u00e9todo que hayas usado para crearlo, ya deber\\u00edas tener tu ambiente virtual disponible. Ahora tienes que indicarle al sistema que quieres usarlo, y eso lo haces <i>activ\\u00e1ndolo</i>. Usa el siguiente comando para activar tu nuevo ambiente virtual:</p><p>$ source venv/bin/activate<br/>(venv) $ _</p><p>Si est\\u00e1s usando la command prompt de Microsoft Windows, el comando de activaci\\u00f3n es ligeramente distinto:</p><p>$ venv\\\\Scripts\\\\activate<br/>(venv) $ _</p><p>Cuando activas un ambiente virtual, la configuraci\\u00f3n de tu sesi\\u00f3n de terminal es modificada para que el interprete Python almacenado dentro sea el invocado cuando escribas python. Adem\\u00e1s, el promt del terminal es modificado para incluir el nombre del ambiente virtual activado. Los cambios realizados a tu sesi\\u00f3n de terminal son todos temporales y privados a esa sesi\\u00f3n, por lo que no se mantendr\\u00e1n cuando cierres la sesi\\u00f3n de terminal. Si trabajas con m\\u00faltiples ventanas de terminal abiertas al mismo tiempo, es completamente posible tener diferentes ambientes virtuales activados en cada una de ellas. Adem\\u00e1s, el prompt del terminal es modificado para incluir el nombre del ambiente virtual activado.</p><p>Ahora que tienes un ambiente virtual creado y activado, puedes finalmente instalar Flask en \\u00e9l:</p><p>(venv) $ pip install flask</p><p>Si quieres confirmar que tu ambiente virtual tiene instalado Flask, puedes iniciar el int\\u00e9rprete Python e importar Flask en \\u00e9l:</p><p>&gt;&gt;&gt; import flask<br/>&gt;&gt;&gt; _</p><p>Si este enunciado no genera ning\\u00fan error puedes felicitarte a ti mismo, ya que Flask est\\u00e1 instalado y listo para usarse.</p><h2>Una aplicaci\\u00f3n \\u201cHola Mundo!\\u201d en Flask</h2><p>Si visitas el\\u00a0 <a href=\\\"http://flask.pocoo.org/\\\">website de Flask</a>, ser\\u00e1s recibido con una aplicaci\\u00f3n bien simple que solo tiene cinco lineas de c\\u00f3digo. En vez de repetir ese ejemplo rebuscado, te voy a mostrar una ligeramente mas elaborada que te dar\\u00e1 una buena estructura base para escribir aplicaciones mas grandes.</p><p>La aplicaci\\u00f3n estar\\u00e1 en un <i>paquete</i>. En Python, un subdirectorio que incluye un archivo <i>__init__.py</i> es considerando un paquete, y puede ser importado. Cuando importas un paquete, el archivo\\u00a0 <i>__init__.py</i> ejecuta y define que s\\u00edmbolos el paquete expone al mundo.</p><p>Creemos un paquete llamado app, que alojar\\u00e1 la aplicaci\\u00f3n. Aseg\\u00farate de estar en el directorio <i>microblog</i> y ejecuta el siguiente comando:</p><p>(venv) $ mkdir app</p><p>El archivo\\u00a0 <i>__init__.py</i> para el paquete app va a contener el siguiente c\\u00f3digo:</p><p>from flask import Flask<br/><br/>app = Flask(__name__)<br/><br/>from app import routes</p><p>El script anterior simplemente crea un objeto aplicaci\\u00f3n como una instancia de la clase\\u00a0 Flaskimportada desde el paquete flask. La variable __name__ pasada a la clase Flask es una variable predefinida de Python, la cual es establecida al nombre del m\\u00f3dulo en la que es usada. Flask usa la ubicaci\\u00f3n del m\\u00f3dulo enviado aqu\\u00ed como un punto de inicio cuando necesite cargar recursos asociados como archivos de plantilla, los cuales cubrir\\u00e9 en el <a href=\\\"https://lomelisan.wordpress.com/2015/05/31/el-mega-tutorial-de-flask-parte-ii-plantillas/\\\">Cap\\u00edtulo 2</a>.\\u00a0 Para todo prop\\u00f3sito pr\\u00e1ctico, pasar __name__ casi siempre ser\\u00e1 la configuraci\\u00f3n correcta de Flask. La aplicaci\\u00f3n luego importa el m\\u00f3dulo de routes, el cual a\\u00fan no existe.</p><p>Un aspecto que puede parecer confuso en un primer momento es que hay dos entidades llamadas app. El paquete app est\\u00e1 definido por el directorio <i>app</i> y el script <i>__init__.py</i>, y es referido en la sentencia from app import routes. La variable app es definida como una instancia de clase Flask en el script <i>__init__.py</i>, lo cual la hace miembro del paquete app.</p><p>Otro detalle es que el m\\u00f3dulo routes es importado al final del script y\\u00a0 no al comienzo como siempre se hace. Importar al final es un soluci\\u00f3n a las importaciones <i>circulares</i>, un problema com\\u00fan con aplicaciones Flask. Ver\\u00e1s que el m\\u00f3dulo routes necesita importar la variable appdefinida en este script, por lo que colocando una de las importaciones rec\\u00edprocas al final evita errores provenientes de la referencia mutua entre estos dos archivos.</p><p>Entonces, que va en el m\\u00f3dulo routes? Las rutas son las distintas URLs que la aplicaci\\u00f3n emplea. En Flask, los manejadores para las rutas de aplicaci\\u00f3n est\\u00e1n escritos como funciones Python, llamados <i>funciones view</i>. Las funciones Vista son mapeadas hacia una o mas rutas URLs para que Flask sepa que l\\u00f3gica ejecutar cuando un cliente requiera una URL dada.</p><p>Est\\u00e1 es tu primera funci\\u00f3n vista, la cual debes escribir en el nuevo m\\u00f3dulo llamado <i>app/routes.py</i>:</p><p>from app import app<br/><br/>@app.route(&#x27;/&#x27;)<br/>@app.route(&#x27;/index&#x27;)<br/>def index():<br/>    return &quot;Hello, World!&quot;</p><p>Est\\u00e1 funci\\u00f3n view en realidad es bastante simple, solo retorna un saludo en forma de string. Las dos lineas extra\\u00f1as @app.route sobre la funci\\u00f3n son <i>decoradores</i>, una caracter\\u00edstica \\u00fanica del lenguaje Python. Un decorador modifica la funci\\u00f3n que le sigue. Un patr\\u00f3n comun con los decoradores es usarlos para registrar funciones como callbacks para ciertos eventos. En este caso, el decorador @app.route crea una asociaci\\u00f3n entre la URL dada como argumento y la funci\\u00f3n. En este ejemplo hay dos decoradores, los cuales asocian las URLs / e /index a la funci\\u00f3n. Esto significa que cuando un navegador web requiera cualquiera de estas dos URLs, FLask invocar\\u00e1 esta funci\\u00f3n y pasar\\u00e1 como respuesta al navegador el valor de retorno de la misma. Si esto no se entiende a\\u00fan, lo har\\u00e1 en un momento cuando se corra la aplicaci\\u00f3n.</p><p>Para completar la aplicaci\\u00f3n, necesitas tener un script Python que defina la instansiaci\\u00f3n de aplicaic\\u00f3n Flask en el nivel mas alto. Llamemos a este script <i>microblog.py</i>, y defin\\u00e1moslo como una \\u00fanica linea que importa la instancia de aplicaci\\u00f3n:</p><p>from app import app</p><p>Recuerdas las dos entidades app? Aqu\\u00ed las puedes ver a la dos juntas en una misma sentencia. La instancia de aplicaci\\u00f3n Flask es llamada app y es un miembro del paquete\\u00a0 app. La sentencia from app import app importa la variable app que es miembro del paquete app. Si te resulta confuso, puedes renombrar cualquiera de las dos, el paquete o la variable.</p><p>Solo para asegurarnos que est\\u00e9s haciendo todo correctamente, abajo puedes ver un diagrama de la estructura del proyecto hasta ahora:</p><p>microblog/<br/>  venv/<br/>  app/<br/>    __init__.py<br/>    routes.py<br/>  microblog.py</p><p>Lo creas o no, esta primera versi\\u00f3n de la aplicaci\\u00f3n est\\u00e1 lista!. Sin embargo, antes de correrla, Flask necesita sabe como importarla mediante la configuraci\\u00f3n de la variable de ambiente FLASK_APP:</p><p>(venv) $ export FLASK_APP=microblog.py</p><p>Si est\\u00e1s usando Microsoft Windows, usa set en vez de export en el comando anterior.</p><p>Est\\u00e1s listo para volar? Con el siguiente comando puedes ya correr tu primera aplicaci\\u00f3n web:</p><p>(venv) $ flask run<br/> * Serving Flask app &quot;microblog&quot;<br/> * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)</p><p>Despu\\u00e9s de que el servidor inicie esperar\\u00e1 por conexiones cliente. La salida de flask runindica que el servidor est\\u00e1 corriendo en una direcci\\u00f3n IP 127.0.0.1, la cual siempre ser\\u00e1 la direcci\\u00f3n de tu computadora. Esta direcci\\u00f3n es tan com\\u00fan que tiene un nombre que probablemente hayas visto antes: <i>localhost</i>. Los servidores de red escuchan conexiones en un n\\u00famero de puerto espec\\u00edfico. Las aplicaciones desplegadas en servidores de producci\\u00f3n escuchan por lo general en el puerto 443, o a veces en el 80 si no cuentan con encriptaci\\u00f3n, pero acceder a estos puertos requiere de derechos de administrador. Dado que esta aplicaci\\u00f3n est\\u00e1 corriendo en un ambiente de desarrollo, Flask usa el puerto disponible 5000. Ahora abre tu navegador web e ingresa la siguiente URL en el campo de direcci\\u00f3n:</p><p>   http://localhost:5000/</p><p>Tambi\\u00e9n puedes usar la siguiente URL:</p><p>   http://localhost:5000/index</p><p>Vez el mapeo de rutas de la aplicaci\\u00f3n en acci\\u00f3n? La primera URL dirige hacia /, mientras que la segunda lo hace hacia /index. Ambas rutas est\\u00e1n asociadas con la \\u00fanica funci\\u00f3n vista en toda la aplicaci\\u00f3n, por lo que ellas producen la misma salida, la cual es el string que la funci\\u00f3n retorna. Si ingresas cualquier otra URL obtendr\\u00e1s un error, dado que solo dos URLs son reconocidas por la aplicaci\\u00f3n.</p><p>Cuando termines de jugar con el servidor puedes presionar Ctrl-C para detenerlo.</p><p>Felicidades, has completado el primer gran paso para convertirte en un desarrollador web!.</p>\", \"id\": \"61f71289-c718-4cc1-9e0d-6850ecc67616\"}]"}}, {"model": "blog.blogpage", "pk": 10, "fields": {"date": "2018-04-17", "excerpt": "", "body": "[{\"type\": \"paragraph\", \"value\": \"<p>El <a href=\\\"http://mundohispanico.com/noticias/el-uscis-busca-impedir-que-empleados-sean-piadosos-al-evaluar-solicitudes-migratorias\\\"><b>Departamento de Ciudadan\\u00eda e Inmigraci\\u00f3n de Estados Unidos</b></a> (USCIS, por sus siglas en ingl\\u00e9s) anunci\\u00f3 el lanzamiento de una nueva herramienta para verificar la elegibilidad laboral.</p><p>A trav\\u00e9s del nuevo sitio web <a href=\\\"https://www.e-verify.gov/\\\">E-Verify.gov</a>, empleadores, trabajadores y p\\u00fablico en general podr\\u00e1n obtener gratuitamente informaci\\u00f3n electr\\u00f3nica sobre la elegibilidad de empleo.</p><p><b>Just launched! Employers and employees, check out the new</b> <a href=\\\"https://t.co/K4TTzYDNPw\\\"><b>https://t.co/K4TTzYDNPw</b></a> <b>website for tools and services.</b> <a href=\\\"https://t.co/iq2ckY3Gh6\\\"><b>pic.twitter.com/iq2ckY3Gh6</b></a><br/><b>\\u2014 USCIS (@USCIS)</b> <a href=\\\"https://twitter.com/USCIS/status/983697618323861504?ref_src=twsrc%5Etfw\\\"><b>April 10, 2018</b></a></p><p>El portal proporciona informaci\\u00f3n sobre el Formulario I-9, Verificaci\\u00f3n de Elegibilidad de Empleo, que incluye los derechos de los <a href=\\\"http://mundohispanico.com/dinero/por-que-estan-exigiendo-trabajadores-mexicanos-en-el-campo-estadounidense-esta-es-la-razon-video\\\"><b>trabajadores</b></a> y las responsabilidades del empleador en el proceso de verificaci\\u00f3n de empleo.</p><p>E-Verify.gov permitir\\u00e1 a los empleadores inscribirse directamente en el sistema de verificaci\\u00f3n.</p><p>\\u201cDurante la \\u00faltima d\\u00e9cada, E-Verify ha sido la piedra angular de nuestro compromiso continuo para ayudar a los empleadores a mantener una fuerza de trabajo legal\\u201d, dijo el director de USCIS, <a href=\\\"https://mundohispanico.com/noticias/inmigracion/revelan-que-el-director-de-uscis-que-borro-nacion-de-inmigrantes-es-hijo-de-una-inmigrante\\\"><b>Lee Francis Cissna</b></a>.</p><p>\\u201cE-Verify.gov ahora permite a los usuarios comprender mejor y navegar a trav\\u00e9s del proceso de verificaci\\u00f3n de empleo\\u201d, agreg\\u00f3.</p><p>USCIS insta a verificar nuevas contrataciones</p><p>Los empleadores pueden acceder a E-Verify.gov en cualquier momento y en cualquier lugar directamente desde un navegador web.</p><p>Casi todos los empleados son confirmados como autorizados para trabajar al instante, o en un per\\u00edodo m\\u00e1ximo de 24 horas.</p><p>El sistema, que cuenta con casi 800,000 empleadores inscritos, compara la informaci\\u00f3n del Formulario I-9 de un trabajador con los registros disponibles en el Departamento de Seguridad Nacional (DHS) y la Administraci\\u00f3n del Seguro Social, para verificar la autorizaci\\u00f3n para trabajar en Estados Unidos.</p><p></p>\", \"id\": \"d3442924-54cf-4d41-9309-7f5fd4af6731\"}]"}}, {"model": "blog.blogpage", "pk": 11, "fields": {"date": "2018-04-17", "excerpt": "", "body": "[{\"type\": \"paragraph\", \"value\": \"<p><b>Gu\\u00eda de instalaci\\u00f3n r\\u00e1pida</b></p><p>Antes de poder usar Django es necesario instalarlo. Existe una <a href=\\\"https://docs.djangoproject.com/en/1.8/topics/install\\\">gu\\u00eda de instalaci\\u00f3n completa</a> que cubre todas las posibilidades; esta gu\\u00eda es simple, cubre una instalaci\\u00f3n m\\u00ednima que servir\\u00e1 mientras se recorre la introducci\\u00f3n.</p><h2><b>Instalar Python</b></h2><p>Siendo un framework web escrito en Python, Django requiere Python. Funciona con Python 2.7, 3.2, 3.3, o 3.4. Estas versiones de Python incluyen una base de datos liviana llamada <a href=\\\"http://sqlite.org/\\\">SQLite</a>, as\\u00ed que no es necesario configurar un motor de base datos inmediatamente.</p><p>Para obtener la \\u00faltima versi\\u00f3n de Python, ir a <a href=\\\"https://www.python.org/download/\\\">https://www.python.org/download/</a> o instalar a trav\\u00e9s del administrador de paquetes de tu sistema operativo.</p><p><b>Django en Jython</b></p><p>Si us\\u00e1s <a href=\\\"http://www.jython.org/\\\">Jython</a> (implementaci\\u00f3n de Python para la plataforma Java), es necesario seguir algunas pasos adicionales. Ver detalles en <a href=\\\"https://docs.djangoproject.com/en/1.8/howto/jython\\\">/howto/jython</a>.</p><p>Pod\\u00e9s verificar que Python est\\u00e1 instalado corriendo python en tu shell; deber\\u00edas ver algo como:</p><p>Python 3.3.3 (default, Nov 26 2013, 13:33:18)<br/>[GCC 4.8.2] on linux<br/>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.<br/>&gt;&gt;&gt;<br/></p><h2><b>Configurar una base de datos</b></h2><p>Este paso s\\u00f3lo es necesario si quisieras trabajar con un motor de base de datos m\\u00e1s \\u201cgrande\\u201d como PostgreSQL, MySQL u Oracle. Para ello consult\\u00e1 la <a href=\\\"https://docs.djangoproject.com/en/1.8/topics/install/#database-installation\\\">informaci\\u00f3n sobre la instalaci\\u00f3n de base de datos</a>.</p><h2><b>Borrar versiones anteriores de Django</b></h2><p>Si est\\u00e1s actualizando una versi\\u00f3n previa de Django es necesario <a href=\\\"https://docs.djangoproject.com/en/1.8/topics/install/#removing-old-versions-of-django\\\">desinstalar la versi\\u00f3n anterior antes de instalar una nueva</a>.</p><h2><b>Instalar Django</b></h2><p>Existen tres opciones f\\u00e1ciles de instalar Django:</p><ul><li>Instalar una versi\\u00f3n de Django <a href=\\\"https://docs.djangoproject.com/en/1.8/misc/distributions\\\">provista por tu sistema operativo</a>. Esta es la opci\\u00f3n m\\u00e1s r\\u00e1pida para aquellos que tienen un sistema operativo que distribuye Django.</li><li><a href=\\\"https://docs.djangoproject.com/en/1.8/topics/install/#installing-official-release\\\">Instalar un release oficial</a>. Esta es la mejor alternativa para los usuarios qie quieren un n\\u00famero de versi\\u00f3n estable y que no les preocupa no correr la versi\\u00f3n m\\u00e1s reciente de Django.</li><li><a href=\\\"https://docs.djangoproject.com/en/1.8/topics/install/#installing-development-version\\\">Instalar la \\u00faltima versi\\u00f3n de desarrollo</a>. Esta es la mejor opci\\u00f3n para los usuarios que quieren las caracter\\u00edsticas m\\u00e1s recientes y que no tienen miedo de correr c\\u00f3digo nuevo.</li></ul><p><b>Siempre recurrir a la versi\\u00f3n de la documentaci\\u00f3n que corresponde a la versi\\u00f3n de Django que est\\u00e1s usando!</b></p><p>Si segu\\u00eds cualquiera de los dos primeros pasos, hay que estar atentos a las partes de la documentaci\\u00f3n marcadas como <b>new in development version</b> (nuevo en la versi\\u00f3n de desarrollo). Esta frase indica caracter\\u00edsticas que est\\u00e1n solamente disponibles en la versi\\u00f3n de desarrollo de Django, y que muy posibiblemente no funcionen en un release oficial.</p><h2><b>Verificando</b></h2><p>Para verificar que Django es accesible desde Python, tipe\\u00e1 python en tu shell. Una vez en el prompt de Python, intent\\u00e1 importar Django:</p><p>&gt;&gt;&gt; import django<br/>&gt;&gt;&gt; print(django.get_version())<br/>1.8<br/></p><p>You may have another version of Django installed.</p>\", \"id\": \"ce7a153b-6a52-4813-bd04-17a4101cbf7f\"}]"}}]